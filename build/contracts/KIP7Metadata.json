{
  "contractName": "KIP7Metadata",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "safeTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"safeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Optional functions from the KIP7 standard. See http://kips.klaytn.com/KIPs/kip-7-fungible_token\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through `transferFrom`. This is zero by default. This value changes when `approve` or `transferFrom` are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. > Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an `Approval` event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IKIP7.balanceOf` and `IKIP7.transfer`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"safeTransfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.\"},\"safeTransfer(address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.\"},\"supportsInterface(bytes4)\":{\"details\":\"See `IKIP13.supportsInterface`. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a `Transfer` event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a `Transfer` event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/bridge/kip7/KIP7/KIP7Metadata.sol\":\"KIP7Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/bridge/kip7/KIP7/IKIP7.sol\":{\"keccak256\":\"0xeb029fcc38c4752e9268ae5c27a562472ef4dc6ef8e34b0a3bd7fc7e7ed792c8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://cf3bd2d8d64fc3a7854f8429b994fbab40f4459bf00e038a8c5ef1819417e000\",\"dweb:/ipfs/QmS37s2X9VRUMQc3yXyY3CjcAzw6AypGCG6avZtzaWDW1B\"]},\"project:/contracts/bridge/kip7/KIP7/KIP7Metadata.sol\":{\"keccak256\":\"0xeddfbae03848b7a4ff445a91af8427c671a07638e39a4704ac80605197b4a1ed\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2adfa8f314def54ad954e90b7cf896394a21dc36ad848f67870992916a3d693d\",\"dweb:/ipfs/QmYZnoGLcJK9jphHXfodpAPrf3KMkYTnKMQWVE4kLjnizT\"]},\"project:/contracts/bridge/kip7/introspection/IKIP13.sol\":{\"keccak256\":\"0xffd530e45bc91bd0abc99a182ec37836a379af425e086100c64d7d7381ab1c1e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://118d8152841efed6cfd432b49305b12c407176adfd5c93e025080291e71e0b32\",\"dweb:/ipfs/QmaWp4xceqz6bCtbBJovMSMuLcJjfoB47GN1Nxt5GPSVsH\"]},\"project:/contracts/bridge/kip7/introspection/KIP13.sol\":{\"keccak256\":\"0xdf36f1f9627732aa73a6e7ed6d3822ce12b95e748183ae91b1b12d8e08077c82\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://deac7209ad40b3c9a9223a7d24d54de92fe8cac6e27b3fd105340190c601dc0a\",\"dweb:/ipfs/QmZaeipTuRHx5NCpMRfbS1vDCLCFxPN8HiD2zX1G78kR1a\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\nimport \"./IKIP7.sol\";\nimport \"../introspection/KIP13.sol\";\n\n/**\n * @dev Optional functions from the KIP7 standard.\n * See http://kips.klaytn.com/KIPs/kip-7-fungible_token\n */\nabstract contract KIP7Metadata is KIP13, IKIP7 {\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /*\n     *     bytes4(keccak256('name()')) == 0x06fdde03\n     *     bytes4(keccak256('symbol()')) == 0x95d89b41\n     *     bytes4(keccak256('decimals()')) == 0x313ce567\n     *\n     *     => 0x06fdde03 ^ 0x95d89b41 ^ 0x313ce567 == 0xa219a025\n     */\n    bytes4 private constant _INTERFACE_ID_KIP7_METADATA = 0xa219a025;\n\n    /**\n     * @dev Sets the values for `name`, `symbol`, and `decimals`. All three of\n     * these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name_, string memory symbol_, uint8 decimals_) {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = decimals_;\n\n        // register the supported interfaces to conform to KIP7 via KIP13\n        _registerInterface(_INTERFACE_ID_KIP7_METADATA);\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei.\n     *\n     * > Note that this information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * `IKIP7.balanceOf` and `IKIP7.transfer`.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n}\n",
  "sourcePath": "/Users/nguyenthithuthao/Downloads/Documents/wormhole-kip7/contracts/bridge/kip7/KIP7/KIP7Metadata.sol",
  "ast": {
    "absolutePath": "project:/contracts/bridge/kip7/KIP7/KIP7Metadata.sol",
    "exportedSymbols": {
      "IKIP13": [
        8195
      ],
      "IKIP7": [
        7051
      ],
      "KIP13": [
        8252
      ],
      "KIP7Metadata": [
        7711
      ]
    },
    "id": 7712,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7640,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:43"
      },
      {
        "absolutePath": "project:/contracts/bridge/kip7/KIP7/IKIP7.sol",
        "file": "./IKIP7.sol",
        "id": 7641,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7712,
        "sourceUnit": 7052,
        "src": "64:21:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/bridge/kip7/introspection/KIP13.sol",
        "file": "../introspection/KIP13.sol",
        "id": 7642,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7712,
        "sourceUnit": 8253,
        "src": "86:36:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 7644,
              "name": "KIP13",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8252,
              "src": "273:5:43"
            },
            "id": 7645,
            "nodeType": "InheritanceSpecifier",
            "src": "273:5:43"
          },
          {
            "baseName": {
              "id": 7646,
              "name": "IKIP7",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7051,
              "src": "280:5:43"
            },
            "id": 7647,
            "nodeType": "InheritanceSpecifier",
            "src": "280:5:43"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7643,
          "nodeType": "StructuredDocumentation",
          "src": "124:114:43",
          "text": " @dev Optional functions from the KIP7 standard.\n See http://kips.klaytn.com/KIPs/kip-7-fungible_token"
        },
        "fullyImplemented": false,
        "id": 7711,
        "linearizedBaseContracts": [
          7711,
          7051,
          8252,
          8195
        ],
        "name": "KIP7Metadata",
        "nameLocation": "257:12:43",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7649,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "307:5:43",
            "nodeType": "VariableDeclaration",
            "scope": 7711,
            "src": "292:20:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7648,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "292:6:43",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7651,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "333:7:43",
            "nodeType": "VariableDeclaration",
            "scope": 7711,
            "src": "318:22:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7650,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "318:6:43",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7653,
            "mutability": "mutable",
            "name": "_decimals",
            "nameLocation": "360:9:43",
            "nodeType": "VariableDeclaration",
            "scope": 7711,
            "src": "346:23:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 7652,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "346:5:43",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 7656,
            "mutability": "constant",
            "name": "_INTERFACE_ID_KIP7_METADATA",
            "nameLocation": "652:27:43",
            "nodeType": "VariableDeclaration",
            "scope": 7711,
            "src": "628:64:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 7654,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "628:6:43",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "hexValue": "30786132313961303235",
              "id": 7655,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "682:10:43",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2719588389_by_1",
                "typeString": "int_const 2719588389"
              },
              "value": "0xa219a025"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 7682,
              "nodeType": "Block",
              "src": "957:220:43",
              "statements": [
                {
                  "expression": {
                    "id": 7668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7666,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7649,
                      "src": "967:5:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7667,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7659,
                      "src": "975:5:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "967:13:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 7669,
                  "nodeType": "ExpressionStatement",
                  "src": "967:13:43"
                },
                {
                  "expression": {
                    "id": 7672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7670,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7651,
                      "src": "990:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7671,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7661,
                      "src": "1000:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "990:17:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 7673,
                  "nodeType": "ExpressionStatement",
                  "src": "990:17:43"
                },
                {
                  "expression": {
                    "id": 7676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7674,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7653,
                      "src": "1017:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7675,
                      "name": "decimals_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7663,
                      "src": "1029:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1017:21:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 7677,
                  "nodeType": "ExpressionStatement",
                  "src": "1017:21:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7679,
                        "name": "_INTERFACE_ID_KIP7_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7656,
                        "src": "1142:27:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 7678,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8251,
                      "src": "1123:18:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 7680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1123:47:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7681,
                  "nodeType": "ExpressionStatement",
                  "src": "1123:47:43"
                }
              ]
            },
            "documentation": {
              "id": 7657,
              "nodeType": "StructuredDocumentation",
              "src": "699:179:43",
              "text": " @dev Sets the values for `name`, `symbol`, and `decimals`. All three of\n these values are immutable: they can only be set once during\n construction."
            },
            "id": 7683,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7659,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "910:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 7683,
                  "src": "896:19:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7658,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "896:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7661,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "931:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 7683,
                  "src": "917:21:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7660,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "917:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7663,
                  "mutability": "mutable",
                  "name": "decimals_",
                  "nameLocation": "946:9:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 7683,
                  "src": "940:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7662,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "895:61:43"
            },
            "returnParameters": {
              "id": 7665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "957:0:43"
            },
            "scope": 7711,
            "src": "883:294:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7691,
              "nodeType": "Block",
              "src": "1294:29:43",
              "statements": [
                {
                  "expression": {
                    "id": 7689,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7649,
                    "src": "1311:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 7688,
                  "id": 7690,
                  "nodeType": "Return",
                  "src": "1304:12:43"
                }
              ]
            },
            "documentation": {
              "id": 7684,
              "nodeType": "StructuredDocumentation",
              "src": "1183:54:43",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 7692,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "1251:4:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1255:2:43"
            },
            "returnParameters": {
              "id": 7688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7687,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7692,
                  "src": "1279:13:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7686,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1278:15:43"
            },
            "scope": 7711,
            "src": "1242:81:43",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7700,
              "nodeType": "Block",
              "src": "1490:31:43",
              "statements": [
                {
                  "expression": {
                    "id": 7698,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7651,
                    "src": "1507:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 7697,
                  "id": 7699,
                  "nodeType": "Return",
                  "src": "1500:14:43"
                }
              ]
            },
            "documentation": {
              "id": 7693,
              "nodeType": "StructuredDocumentation",
              "src": "1329:102:43",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 7701,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "1445:6:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1451:2:43"
            },
            "returnParameters": {
              "id": 7697,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7696,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7701,
                  "src": "1475:13:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7695,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1475:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1474:15:43"
            },
            "scope": 7711,
            "src": "1436:85:43",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7709,
              "nodeType": "Block",
              "src": "2122:33:43",
              "statements": [
                {
                  "expression": {
                    "id": 7707,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7653,
                    "src": "2139:9:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 7706,
                  "id": 7708,
                  "nodeType": "Return",
                  "src": "2132:16:43"
                }
              ]
            },
            "documentation": {
              "id": 7702,
              "nodeType": "StructuredDocumentation",
              "src": "1527:542:43",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei.\n > Note that this information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n `IKIP7.balanceOf` and `IKIP7.transfer`."
            },
            "functionSelector": "313ce567",
            "id": 7710,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "2083:8:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2091:2:43"
            },
            "returnParameters": {
              "id": 7706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7705,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7710,
                  "src": "2115:5:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7704,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2115:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2114:7:43"
            },
            "scope": 7711,
            "src": "2074:81:43",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7712,
        "src": "239:1918:43",
        "usedErrors": []
      }
    ],
    "src": "39:2119:43"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/bridge/kip7/KIP7/KIP7Metadata.sol",
    "exportedSymbols": {
      "IKIP13": [
        8195
      ],
      "IKIP7": [
        7051
      ],
      "KIP13": [
        8252
      ],
      "KIP7Metadata": [
        7711
      ]
    },
    "id": 7712,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7640,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:43"
      },
      {
        "absolutePath": "project:/contracts/bridge/kip7/KIP7/IKIP7.sol",
        "file": "./IKIP7.sol",
        "id": 7641,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7712,
        "sourceUnit": 7052,
        "src": "64:21:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/bridge/kip7/introspection/KIP13.sol",
        "file": "../introspection/KIP13.sol",
        "id": 7642,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7712,
        "sourceUnit": 8253,
        "src": "86:36:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 7644,
              "name": "KIP13",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8252,
              "src": "273:5:43"
            },
            "id": 7645,
            "nodeType": "InheritanceSpecifier",
            "src": "273:5:43"
          },
          {
            "baseName": {
              "id": 7646,
              "name": "IKIP7",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7051,
              "src": "280:5:43"
            },
            "id": 7647,
            "nodeType": "InheritanceSpecifier",
            "src": "280:5:43"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7643,
          "nodeType": "StructuredDocumentation",
          "src": "124:114:43",
          "text": " @dev Optional functions from the KIP7 standard.\n See http://kips.klaytn.com/KIPs/kip-7-fungible_token"
        },
        "fullyImplemented": false,
        "id": 7711,
        "linearizedBaseContracts": [
          7711,
          7051,
          8252,
          8195
        ],
        "name": "KIP7Metadata",
        "nameLocation": "257:12:43",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7649,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "307:5:43",
            "nodeType": "VariableDeclaration",
            "scope": 7711,
            "src": "292:20:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7648,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "292:6:43",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7651,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "333:7:43",
            "nodeType": "VariableDeclaration",
            "scope": 7711,
            "src": "318:22:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7650,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "318:6:43",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7653,
            "mutability": "mutable",
            "name": "_decimals",
            "nameLocation": "360:9:43",
            "nodeType": "VariableDeclaration",
            "scope": 7711,
            "src": "346:23:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 7652,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "346:5:43",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 7656,
            "mutability": "constant",
            "name": "_INTERFACE_ID_KIP7_METADATA",
            "nameLocation": "652:27:43",
            "nodeType": "VariableDeclaration",
            "scope": 7711,
            "src": "628:64:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 7654,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "628:6:43",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "hexValue": "30786132313961303235",
              "id": 7655,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "682:10:43",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2719588389_by_1",
                "typeString": "int_const 2719588389"
              },
              "value": "0xa219a025"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 7682,
              "nodeType": "Block",
              "src": "957:220:43",
              "statements": [
                {
                  "expression": {
                    "id": 7668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7666,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7649,
                      "src": "967:5:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7667,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7659,
                      "src": "975:5:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "967:13:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 7669,
                  "nodeType": "ExpressionStatement",
                  "src": "967:13:43"
                },
                {
                  "expression": {
                    "id": 7672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7670,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7651,
                      "src": "990:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7671,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7661,
                      "src": "1000:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "990:17:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 7673,
                  "nodeType": "ExpressionStatement",
                  "src": "990:17:43"
                },
                {
                  "expression": {
                    "id": 7676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7674,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7653,
                      "src": "1017:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7675,
                      "name": "decimals_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7663,
                      "src": "1029:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1017:21:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 7677,
                  "nodeType": "ExpressionStatement",
                  "src": "1017:21:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7679,
                        "name": "_INTERFACE_ID_KIP7_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7656,
                        "src": "1142:27:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 7678,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8251,
                      "src": "1123:18:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 7680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1123:47:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7681,
                  "nodeType": "ExpressionStatement",
                  "src": "1123:47:43"
                }
              ]
            },
            "documentation": {
              "id": 7657,
              "nodeType": "StructuredDocumentation",
              "src": "699:179:43",
              "text": " @dev Sets the values for `name`, `symbol`, and `decimals`. All three of\n these values are immutable: they can only be set once during\n construction."
            },
            "id": 7683,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7659,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "910:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 7683,
                  "src": "896:19:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7658,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "896:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7661,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "931:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 7683,
                  "src": "917:21:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7660,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "917:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7663,
                  "mutability": "mutable",
                  "name": "decimals_",
                  "nameLocation": "946:9:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 7683,
                  "src": "940:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7662,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "895:61:43"
            },
            "returnParameters": {
              "id": 7665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "957:0:43"
            },
            "scope": 7711,
            "src": "883:294:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7691,
              "nodeType": "Block",
              "src": "1294:29:43",
              "statements": [
                {
                  "expression": {
                    "id": 7689,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7649,
                    "src": "1311:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 7688,
                  "id": 7690,
                  "nodeType": "Return",
                  "src": "1304:12:43"
                }
              ]
            },
            "documentation": {
              "id": 7684,
              "nodeType": "StructuredDocumentation",
              "src": "1183:54:43",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 7692,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "1251:4:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1255:2:43"
            },
            "returnParameters": {
              "id": 7688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7687,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7692,
                  "src": "1279:13:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7686,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1278:15:43"
            },
            "scope": 7711,
            "src": "1242:81:43",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7700,
              "nodeType": "Block",
              "src": "1490:31:43",
              "statements": [
                {
                  "expression": {
                    "id": 7698,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7651,
                    "src": "1507:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 7697,
                  "id": 7699,
                  "nodeType": "Return",
                  "src": "1500:14:43"
                }
              ]
            },
            "documentation": {
              "id": 7693,
              "nodeType": "StructuredDocumentation",
              "src": "1329:102:43",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 7701,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "1445:6:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1451:2:43"
            },
            "returnParameters": {
              "id": 7697,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7696,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7701,
                  "src": "1475:13:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7695,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1475:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1474:15:43"
            },
            "scope": 7711,
            "src": "1436:85:43",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7709,
              "nodeType": "Block",
              "src": "2122:33:43",
              "statements": [
                {
                  "expression": {
                    "id": 7707,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7653,
                    "src": "2139:9:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 7706,
                  "id": 7708,
                  "nodeType": "Return",
                  "src": "2132:16:43"
                }
              ]
            },
            "documentation": {
              "id": 7702,
              "nodeType": "StructuredDocumentation",
              "src": "1527:542:43",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei.\n > Note that this information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n `IKIP7.balanceOf` and `IKIP7.transfer`."
            },
            "functionSelector": "313ce567",
            "id": 7710,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "2083:8:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2091:2:43"
            },
            "returnParameters": {
              "id": 7706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7705,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7710,
                  "src": "2115:5:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7704,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2115:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2114:7:43"
            },
            "scope": 7711,
            "src": "2074:81:43",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7712,
        "src": "239:1918:43",
        "usedErrors": []
      }
    ],
    "src": "39:2119:43"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2022-01-26T09:33:50.523Z",
  "devdoc": {
    "details": "Optional functions from the KIP7 standard. See http://kips.klaytn.com/KIPs/kip-7-fungible_token",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through `transferFrom`. This is zero by default. This value changes when `approve` or `transferFrom` are called."
      },
      "approve(address,uint256)": {
        "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. > Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an `Approval` event."
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens owned by `account`."
      },
      "constructor": {
        "details": "Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IKIP7.balanceOf` and `IKIP7.transfer`."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "safeTransfer(address,uint256)": {
        "details": "Moves `amount` tokens from the caller's account to `recipient`."
      },
      "safeTransfer(address,uint256,bytes)": {
        "details": "Moves `amount` tokens from the caller's account to `recipient`."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance."
      },
      "supportsInterface(bytes4)": {
        "details": "See `IKIP13.supportsInterface`. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "Returns the amount of tokens in existence."
      },
      "transfer(address,uint256)": {
        "details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a `Transfer` event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a `Transfer` event."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}