{
  "contractName": "Migrator",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_fromAsset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_toAsset",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fromAsset",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fromDecimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "toAsset",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "toDecimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "add",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "remove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "migrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fromAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_toAsset\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromAsset\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toAsset\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/bridge/utils/Migrator.sol\":\"Migrator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487\",\"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/bridge/utils/Migrator.sol\":{\"keccak256\":\"0x391404bfdbc16cd42efeb5003811185a59821a7fcad1c36ab5f218e47c29ca07\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://253ba0b801eee08c56594e1c3fe7588699a231384c82ae1d4ff6870c8ee18ab6\",\"dweb:/ipfs/QmWKt9d5SkkDE1vxzBBffDbi41372dYdswXiwsQEsaT5sg\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620014f8380380620014f88339810160408190526200003491620002a6565b604080518082018252601481527f546f6b656e204d6967726174696f6e20506f6f6c00000000000000000000000060208083019182528351808501909452600b84526a04d69677261746f722d4c560ac1b9084015281519192916200009c91600391620001e3565b508051620000b2906004906020840190620001e3565b5050600580546001600160a01b038086166001600160a01b0319928316811790935560068054918616919092161790556040805163313ce56760e01b8152905191925063313ce567916004808301926020929190829003018186803b1580156200011b57600080fd5b505afa15801562000130573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001569190620002dd565b60ff16600781905550806001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156200019957600080fd5b505afa158015620001ae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001d49190620002dd565b60ff1660085550620003449050565b828054620001f19062000307565b90600052602060002090601f01602090048101928262000215576000855562000260565b82601f106200023057805160ff191683800117855562000260565b8280016001018555821562000260579182015b828111156200026057825182559160200191906001019062000243565b506200026e92915062000272565b5090565b5b808211156200026e576000815560010162000273565b80516001600160a01b0381168114620002a157600080fd5b919050565b60008060408385031215620002b9578182fd5b620002c48362000289565b9150620002d46020840162000289565b90509250929050565b600060208284031215620002ef578081fd5b815160ff8116811462000300578182fd5b9392505050565b600181811c908216806200031c57607f821691505b602082108114156200033e57634e487b7160e01b600052602260045260246000fd5b50919050565b6111a480620003546000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80634cc82215116100ad57806395d89b411161007157806395d89b4114610262578063a457c2d71461026a578063a9059cbb1461027d578063dd62ed3e14610290578063f1354c08146102c957600080fd5b80634cc82215146101e95780634d92626a146101fc57806370a082311461020557806386e898431461022e57806392e404111461025957600080fd5b806323b872dd116100f457806323b872dd1461018e578063313ce567146101a1578063379607f5146101b057806339509351146101c3578063454b0608146101d657600080fd5b806306fdde0314610126578063095ea7b3146101445780631003e2d21461016757806318160ddd1461017c575b600080fd5b61012e6102dc565b60405161013b9190610f65565b60405180910390f35b610157610152366004610ee8565b61036e565b604051901515815260200161013b565b61017a610175366004610f31565b610385565b005b6002545b60405190815260200161013b565b61015761019c366004610ead565b6103aa565b6040516012815260200161013b565b61017a6101be366004610f31565b61045b565b6101576101d1366004610ee8565b61048e565b61017a6101e4366004610f31565b6104ca565b61017a6101f7366004610f31565b610506565b61018060075481565b610180610213366004610e61565b6001600160a01b031660009081526020819052604090205490565b600554610241906001600160a01b031681565b6040516001600160a01b03909116815260200161013b565b61018060085481565b61012e610527565b610157610278366004610ee8565b610536565b61015761028b366004610ee8565b6105cf565b61018061029e366004610e7b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600654610241906001600160a01b031681565b6060600380546102eb9061111d565b80601f01602080910402602001604051908101604052809291908181526020018280546103179061111d565b80156103645780601f1061033957610100808354040283529160200191610364565b820191906000526020600020905b81548152906001019060200180831161034757829003601f168201915b5050505050905090565b600061037b3384846105dc565b5060015b92915050565b60065461039d906001600160a01b0316333084610701565b6103a73382610772565b50565b60006103b7848484610851565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104415760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61044e85338584036105dc565b60019150505b9392505050565b6104653382610a1f565b6005546008546007546103a7926001600160a01b0316913391610489919086610b6a565b610bcb565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161037b9185906104c5908690610f98565b6105dc565b6005546104e2906001600160a01b0316333084610701565b6006546007546008546103a7926001600160a01b0316913391610489919086610b6a565b6105103382610a1f565b6006546103a7906001600160a01b03163383610bcb565b6060600480546102eb9061111d565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156105b85760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610438565b6105c533858584036105dc565b5060019392505050565b600061037b338484610851565b6001600160a01b03831661063e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610438565b6001600160a01b03821661069f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610438565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6040516001600160a01b038085166024830152831660448201526064810182905261076c9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610bfb565b50505050565b6001600160a01b0382166107c85760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610438565b80600260008282546107da9190610f98565b90915550506001600160a01b03821660009081526020819052604081208054839290610807908490610f98565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0383166108b55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610438565b6001600160a01b0382166109175760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610438565b6001600160a01b0383166000908152602081905260409020548181101561098f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610438565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906109c6908490610f98565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a1291815260200190565b60405180910390a361076c565b6001600160a01b038216610a7f5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610438565b6001600160a01b03821660009081526020819052604090205481811015610af35760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610438565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610b229084906110da565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016106f4565b505050565b600082841115610b9a57610b7e83856110da565b610b8990600a611013565b610b939083610fb0565b9150610bc4565b82841015610bc457610bac84846110da565b610bb790600a611013565b610bc190836110bb565b91505b5092915050565b6040516001600160a01b038316602482015260448101829052610b6590849063a9059cbb60e01b90606401610735565b6000610c50826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610ccd9092919063ffffffff16565b805190915015610b655780806020019051810190610c6e9190610f11565b610b655760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610438565b6060610cdc8484600085610ce4565b949350505050565b606082471015610d455760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610438565b843b610d935760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610438565b600080866001600160a01b03168587604051610daf9190610f49565b60006040518083038185875af1925050503d8060008114610dec576040519150601f19603f3d011682016040523d82523d6000602084013e610df1565b606091505b5091509150610e01828286610e0c565b979650505050505050565b60608315610e1b575081610454565b825115610e2b5782518084602001fd5b8160405162461bcd60e51b81526004016104389190610f65565b80356001600160a01b0381168114610e5c57600080fd5b919050565b600060208284031215610e72578081fd5b61045482610e45565b60008060408385031215610e8d578081fd5b610e9683610e45565b9150610ea460208401610e45565b90509250929050565b600080600060608486031215610ec1578081fd5b610eca84610e45565b9250610ed860208501610e45565b9150604084013590509250925092565b60008060408385031215610efa578182fd5b610f0383610e45565b946020939093013593505050565b600060208284031215610f22578081fd5b81518015158114610454578182fd5b600060208284031215610f42578081fd5b5035919050565b60008251610f5b8184602087016110f1565b9190910192915050565b6020815260008251806020840152610f848160408501602087016110f1565b601f01601f19169190910160400192915050565b60008219821115610fab57610fab611158565b500190565b600082610fcb57634e487b7160e01b81526012600452602481fd5b500490565b600181815b8085111561100b578160001904821115610ff157610ff1611158565b80851615610ffe57918102915b93841c9390800290610fd5565b509250929050565b600061045483836000826110295750600161037f565b816110365750600061037f565b816001811461104c576002811461105657611072565b600191505061037f565b60ff84111561106757611067611158565b50506001821b61037f565b5060208310610133831016604e8410600b8410161715611095575081810a61037f565b61109f8383610fd0565b80600019048211156110b3576110b3611158565b029392505050565b60008160001904831182151516156110d5576110d5611158565b500290565b6000828210156110ec576110ec611158565b500390565b60005b8381101561110c5781810151838201526020016110f4565b8381111561076c5750506000910152565b600181811c9082168061113157607f821691505b6020821081141561115257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220715a47b35f1ab5b5e027b3e41952a863f7d2f1674c05e6b9f076930d2055767a64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c80634cc82215116100ad57806395d89b411161007157806395d89b4114610262578063a457c2d71461026a578063a9059cbb1461027d578063dd62ed3e14610290578063f1354c08146102c957600080fd5b80634cc82215146101e95780634d92626a146101fc57806370a082311461020557806386e898431461022e57806392e404111461025957600080fd5b806323b872dd116100f457806323b872dd1461018e578063313ce567146101a1578063379607f5146101b057806339509351146101c3578063454b0608146101d657600080fd5b806306fdde0314610126578063095ea7b3146101445780631003e2d21461016757806318160ddd1461017c575b600080fd5b61012e6102dc565b60405161013b9190610f65565b60405180910390f35b610157610152366004610ee8565b61036e565b604051901515815260200161013b565b61017a610175366004610f31565b610385565b005b6002545b60405190815260200161013b565b61015761019c366004610ead565b6103aa565b6040516012815260200161013b565b61017a6101be366004610f31565b61045b565b6101576101d1366004610ee8565b61048e565b61017a6101e4366004610f31565b6104ca565b61017a6101f7366004610f31565b610506565b61018060075481565b610180610213366004610e61565b6001600160a01b031660009081526020819052604090205490565b600554610241906001600160a01b031681565b6040516001600160a01b03909116815260200161013b565b61018060085481565b61012e610527565b610157610278366004610ee8565b610536565b61015761028b366004610ee8565b6105cf565b61018061029e366004610e7b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600654610241906001600160a01b031681565b6060600380546102eb9061111d565b80601f01602080910402602001604051908101604052809291908181526020018280546103179061111d565b80156103645780601f1061033957610100808354040283529160200191610364565b820191906000526020600020905b81548152906001019060200180831161034757829003601f168201915b5050505050905090565b600061037b3384846105dc565b5060015b92915050565b60065461039d906001600160a01b0316333084610701565b6103a73382610772565b50565b60006103b7848484610851565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104415760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61044e85338584036105dc565b60019150505b9392505050565b6104653382610a1f565b6005546008546007546103a7926001600160a01b0316913391610489919086610b6a565b610bcb565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161037b9185906104c5908690610f98565b6105dc565b6005546104e2906001600160a01b0316333084610701565b6006546007546008546103a7926001600160a01b0316913391610489919086610b6a565b6105103382610a1f565b6006546103a7906001600160a01b03163383610bcb565b6060600480546102eb9061111d565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156105b85760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610438565b6105c533858584036105dc565b5060019392505050565b600061037b338484610851565b6001600160a01b03831661063e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610438565b6001600160a01b03821661069f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610438565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6040516001600160a01b038085166024830152831660448201526064810182905261076c9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610bfb565b50505050565b6001600160a01b0382166107c85760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610438565b80600260008282546107da9190610f98565b90915550506001600160a01b03821660009081526020819052604081208054839290610807908490610f98565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0383166108b55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610438565b6001600160a01b0382166109175760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610438565b6001600160a01b0383166000908152602081905260409020548181101561098f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610438565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906109c6908490610f98565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a1291815260200190565b60405180910390a361076c565b6001600160a01b038216610a7f5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610438565b6001600160a01b03821660009081526020819052604090205481811015610af35760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610438565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610b229084906110da565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016106f4565b505050565b600082841115610b9a57610b7e83856110da565b610b8990600a611013565b610b939083610fb0565b9150610bc4565b82841015610bc457610bac84846110da565b610bb790600a611013565b610bc190836110bb565b91505b5092915050565b6040516001600160a01b038316602482015260448101829052610b6590849063a9059cbb60e01b90606401610735565b6000610c50826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610ccd9092919063ffffffff16565b805190915015610b655780806020019051810190610c6e9190610f11565b610b655760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610438565b6060610cdc8484600085610ce4565b949350505050565b606082471015610d455760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610438565b843b610d935760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610438565b600080866001600160a01b03168587604051610daf9190610f49565b60006040518083038185875af1925050503d8060008114610dec576040519150601f19603f3d011682016040523d82523d6000602084013e610df1565b606091505b5091509150610e01828286610e0c565b979650505050505050565b60608315610e1b575081610454565b825115610e2b5782518084602001fd5b8160405162461bcd60e51b81526004016104389190610f65565b80356001600160a01b0381168114610e5c57600080fd5b919050565b600060208284031215610e72578081fd5b61045482610e45565b60008060408385031215610e8d578081fd5b610e9683610e45565b9150610ea460208401610e45565b90509250929050565b600080600060608486031215610ec1578081fd5b610eca84610e45565b9250610ed860208501610e45565b9150604084013590509250925092565b60008060408385031215610efa578182fd5b610f0383610e45565b946020939093013593505050565b600060208284031215610f22578081fd5b81518015158114610454578182fd5b600060208284031215610f42578081fd5b5035919050565b60008251610f5b8184602087016110f1565b9190910192915050565b6020815260008251806020840152610f848160408501602087016110f1565b601f01601f19169190910160400192915050565b60008219821115610fab57610fab611158565b500190565b600082610fcb57634e487b7160e01b81526012600452602481fd5b500490565b600181815b8085111561100b578160001904821115610ff157610ff1611158565b80851615610ffe57918102915b93841c9390800290610fd5565b509250929050565b600061045483836000826110295750600161037f565b816110365750600061037f565b816001811461104c576002811461105657611072565b600191505061037f565b60ff84111561106757611067611158565b50506001821b61037f565b5060208310610133831016604e8410600b8410161715611095575081810a61037f565b61109f8383610fd0565b80600019048211156110b3576110b3611158565b029392505050565b60008160001904831182151516156110d5576110d5611158565b500290565b6000828210156110ec576110ec611158565b500390565b60005b8381101561110c5781810151838201526020016110f4565b8381111561076c5750506000910152565b600181811c9082168061113157607f821691505b6020821081141561115257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220715a47b35f1ab5b5e027b3e41952a863f7d2f1674c05e6b9f076930d2055767a64736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1184:88",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:88",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:88",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:88"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:88"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:88",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:88",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:88"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:88"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:3:88",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "159:1:88",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:88"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:88"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:88",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:88"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:88"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:88"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:88"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:88"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:88"
                  },
                  "nodeType": "YulIf",
                  "src": "115:2:88"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:88",
                "type": ""
              }
            ],
            "src": "14:177:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "294:205:88",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "340:26:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "349:6:88"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "357:6:88"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "342:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "342:22:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "342:22:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "315:7:88"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "324:9:88"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "311:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "311:23:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "336:2:88",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "307:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "307:32:88"
                  },
                  "nodeType": "YulIf",
                  "src": "304:2:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "375:50:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "415:9:88"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "385:29:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "385:40:88"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "375:6:88"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "434:59:88",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "478:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "489:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "474:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "474:18:88"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "444:29:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "444:49:88"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "434:6:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "252:9:88",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "263:7:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "275:6:88",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "283:6:88",
                "type": ""
              }
            ],
            "src": "196:303:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "583:214:88",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "629:26:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "638:6:88"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "646:6:88"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "631:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "631:22:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "631:22:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "604:7:88"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "613:9:88"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "600:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "600:23:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "625:2:88",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "596:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "596:32:88"
                  },
                  "nodeType": "YulIf",
                  "src": "593:2:88"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "664:29:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "683:9:88"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "677:5:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "677:16:88"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "668:5:88",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "741:26:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "750:6:88"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "758:6:88"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "743:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "743:22:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "743:22:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "715:5:88"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "726:5:88"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "733:4:88",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "722:3:88"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "722:16:88"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "712:2:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "712:27:88"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "705:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "705:35:88"
                  },
                  "nodeType": "YulIf",
                  "src": "702:2:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "776:15:88",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "786:5:88"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "776:6:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "549:9:88",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "560:7:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "572:6:88",
                "type": ""
              }
            ],
            "src": "504:293:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "857:325:88",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "867:22:88",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "881:1:88",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "884:4:88"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "877:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "877:12:88"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "867:6:88"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "898:38:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "928:4:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "934:1:88",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "924:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "924:12:88"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "902:18:88",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "975:31:88",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "977:27:88",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "991:6:88"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "999:4:88",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "987:3:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "987:17:88"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "977:6:88"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "955:18:88"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "948:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "948:26:88"
                  },
                  "nodeType": "YulIf",
                  "src": "945:2:88"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1065:111:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1086:1:88",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1093:3:88",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1098:10:88",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1089:3:88"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1089:20:88"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1079:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1079:31:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1079:31:88"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1130:1:88",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1133:4:88",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1123:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1123:15:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1123:15:88"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1158:1:88",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1161:4:88",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1151:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1151:15:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1151:15:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1021:18:88"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1044:6:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1052:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1041:2:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1041:14:88"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1018:2:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1018:38:88"
                  },
                  "nodeType": "YulIf",
                  "src": "1015:2:88"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "837:4:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "846:6:88",
                "type": ""
              }
            ],
            "src": "802:380:88"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 88,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:11879:88",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:88",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:88",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:88"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:88"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:88",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:88",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:88"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:88"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:88",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:88",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:88"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:88"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:88",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:88"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:88"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:88"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:88"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:88"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:88"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:88"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:88",
                "type": ""
              }
            ],
            "src": "14:173:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:126:88",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:26:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "317:6:88"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "325:6:88"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:22:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:22:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "283:7:88"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "292:9:88"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:23:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:2:88",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "275:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:32:88"
                  },
                  "nodeType": "YulIf",
                  "src": "272:2:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "343:39:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "372:9:88"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "353:18:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "353:29:88"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "343:6:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:88",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "239:7:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "251:6:88",
                "type": ""
              }
            ],
            "src": "192:196:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "480:183:88",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "526:26:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "535:6:88"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "543:6:88"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "528:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "528:22:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "528:22:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "501:7:88"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "510:9:88"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "497:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "497:23:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "522:2:88",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "493:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "493:32:88"
                  },
                  "nodeType": "YulIf",
                  "src": "490:2:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "561:39:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "590:9:88"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "571:18:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "571:29:88"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "561:6:88"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "609:48:88",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "642:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "653:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "638:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "638:18:88"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "619:18:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "619:38:88"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "609:6:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "438:9:88",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "449:7:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "461:6:88",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "469:6:88",
                "type": ""
              }
            ],
            "src": "393:270:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "772:234:88",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "818:26:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "827:6:88"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "835:6:88"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "820:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "820:22:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "820:22:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "793:7:88"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "802:9:88"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "789:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "789:23:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "814:2:88",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "785:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "785:32:88"
                  },
                  "nodeType": "YulIf",
                  "src": "782:2:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "853:39:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "882:9:88"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "863:18:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "863:29:88"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "853:6:88"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "901:48:88",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "934:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "945:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "930:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "930:18:88"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "911:18:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "911:38:88"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "901:6:88"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "958:42:88",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "985:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "996:2:88",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "981:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "981:18:88"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "968:12:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "968:32:88"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "958:6:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "722:9:88",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "733:7:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "745:6:88",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "753:6:88",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "761:6:88",
                "type": ""
              }
            ],
            "src": "668:338:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1098:177:88",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1144:26:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1153:6:88"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1161:6:88"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1146:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1146:22:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1146:22:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1119:7:88"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1128:9:88"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1115:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1115:23:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1140:2:88",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1111:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1111:32:88"
                  },
                  "nodeType": "YulIf",
                  "src": "1108:2:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1179:39:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1208:9:88"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1189:18:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1189:29:88"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1179:6:88"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1227:42:88",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1254:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1265:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1250:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1250:18:88"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1237:12:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1237:32:88"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1227:6:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1056:9:88",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1067:7:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1079:6:88",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1087:6:88",
                "type": ""
              }
            ],
            "src": "1011:264:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1358:219:88",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1404:26:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1413:6:88"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1421:6:88"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1406:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1406:22:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1406:22:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1379:7:88"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1388:9:88"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1375:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1375:23:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1400:2:88",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1371:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1371:32:88"
                  },
                  "nodeType": "YulIf",
                  "src": "1368:2:88"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1439:29:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1458:9:88"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1452:5:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1452:16:88"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1443:5:88",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1521:26:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1530:6:88"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1538:6:88"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1523:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1523:22:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1523:22:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1490:5:88"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1511:5:88"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1504:6:88"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1504:13:88"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1497:6:88"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1497:21:88"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1487:2:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1487:32:88"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1480:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1480:40:88"
                  },
                  "nodeType": "YulIf",
                  "src": "1477:2:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1556:15:88",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1566:5:88"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1556:6:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1324:9:88",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1335:7:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1347:6:88",
                "type": ""
              }
            ],
            "src": "1280:297:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1652:120:88",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1698:26:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1707:6:88"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1715:6:88"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1700:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1700:22:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1700:22:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1673:7:88"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1682:9:88"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1669:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1669:23:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1694:2:88",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1665:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1665:32:88"
                  },
                  "nodeType": "YulIf",
                  "src": "1662:2:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1733:33:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1756:9:88"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1743:12:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1743:23:88"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1733:6:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1618:9:88",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1629:7:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1641:6:88",
                "type": ""
              }
            ],
            "src": "1582:190:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1914:137:88",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1924:27:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1944:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1938:5:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1938:13:88"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1928:6:88",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1986:6:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1994:4:88",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1982:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1982:17:88"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2001:3:88"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2006:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1960:21:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1960:53:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1960:53:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2022:23:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2033:3:88"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2038:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2029:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2029:16:88"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2022:3:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1890:3:88",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1895:6:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1906:3:88",
                "type": ""
              }
            ],
            "src": "1777:274:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2213:218:88",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2223:26:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2235:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2246:2:88",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2231:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2231:18:88"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2223:4:88"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2258:29:88",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2276:3:88",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2281:1:88",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2272:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2272:11:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2285:1:88",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2268:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2268:19:88"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2262:2:88",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2303:9:88"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2318:6:88"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2326:2:88"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2314:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2314:15:88"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2296:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2296:34:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2296:34:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2350:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2361:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2346:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2346:18:88"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2370:6:88"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2378:2:88"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2366:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2366:15:88"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2339:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2339:43:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2339:43:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2402:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2413:2:88",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2398:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2398:18:88"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2418:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2391:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2391:34:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2391:34:88"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2166:9:88",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2177:6:88",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2185:6:88",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2193:6:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2204:4:88",
                "type": ""
              }
            ],
            "src": "2056:375:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2565:145:88",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2575:26:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2587:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2598:2:88",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2583:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2583:18:88"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2575:4:88"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2617:9:88"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2632:6:88"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2648:3:88",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2653:1:88",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2644:3:88"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2644:11:88"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2657:1:88",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2640:3:88"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2640:19:88"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2628:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2628:32:88"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2610:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2610:51:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2610:51:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2681:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2692:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2677:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2677:18:88"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2697:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2670:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2670:34:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2670:34:88"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2526:9:88",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2537:6:88",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2545:6:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2556:4:88",
                "type": ""
              }
            ],
            "src": "2436:274:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2810:92:88",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2820:26:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2832:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2843:2:88",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2828:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2828:18:88"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2820:4:88"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2862:9:88"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2887:6:88"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2880:6:88"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2880:14:88"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2873:6:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2873:22:88"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2855:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2855:41:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2855:41:88"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2779:9:88",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2790:6:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2801:4:88",
                "type": ""
              }
            ],
            "src": "2715:187:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3023:102:88",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3033:26:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3045:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3056:2:88",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3041:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3041:18:88"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3033:4:88"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3075:9:88"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3090:6:88"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3106:3:88",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3111:1:88",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3102:3:88"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3102:11:88"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3115:1:88",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3098:3:88"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3098:19:88"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3086:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3086:32:88"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3068:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3068:51:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3068:51:88"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$1274__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2992:9:88",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3003:6:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3014:4:88",
                "type": ""
              }
            ],
            "src": "2907:218:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3251:262:88",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3268:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3279:2:88",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3261:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3261:21:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3261:21:88"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3291:27:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3311:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3305:5:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3305:13:88"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3295:6:88",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3338:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3349:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3334:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3334:18:88"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3354:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3327:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3327:34:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3327:34:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3396:6:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3404:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3392:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3392:15:88"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3413:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3424:2:88",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3409:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3409:18:88"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3429:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3370:21:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3370:66:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3370:66:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3445:62:88",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3461:9:88"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3480:6:88"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3488:2:88",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3476:3:88"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3476:15:88"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3497:2:88",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3493:3:88"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3493:7:88"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3472:3:88"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3472:29:88"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3457:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3457:45:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3504:2:88",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3453:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3453:54:88"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3445:4:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3220:9:88",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3231:6:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3242:4:88",
                "type": ""
              }
            ],
            "src": "3130:383:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3692:225:88",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3709:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3720:2:88",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3702:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3702:21:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3702:21:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3743:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3754:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3739:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3739:18:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3759:2:88",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3732:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3732:30:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3732:30:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3782:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3793:2:88",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3778:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3778:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3798:34:88",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3771:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3771:62:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3771:62:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3853:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3864:2:88",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3849:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3849:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3869:5:88",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3842:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3842:33:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3842:33:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3884:27:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3896:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3907:3:88",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3892:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3892:19:88"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3884:4:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3669:9:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3683:4:88",
                "type": ""
              }
            ],
            "src": "3518:399:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4096:224:88",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4113:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4124:2:88",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4106:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4106:21:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4106:21:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4147:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4158:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4143:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4143:18:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4163:2:88",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4136:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4136:30:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4136:30:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4186:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4197:2:88",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4182:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4182:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4202:34:88",
                        "type": "",
                        "value": "ERC20: burn amount exceeds balan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4175:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4175:62:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4175:62:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4257:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4268:2:88",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4253:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4253:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4273:4:88",
                        "type": "",
                        "value": "ce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4246:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4246:32:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4246:32:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4287:27:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4299:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4310:3:88",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4295:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4295:19:88"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4287:4:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4073:9:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4087:4:88",
                "type": ""
              }
            ],
            "src": "3922:398:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4499:224:88",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4516:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4527:2:88",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4509:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4509:21:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4509:21:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4550:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4561:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4546:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4546:18:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4566:2:88",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4539:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4539:30:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4539:30:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4589:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4600:2:88",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4585:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4585:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4605:34:88",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4578:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4578:62:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4578:62:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4660:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4671:2:88",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4656:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4656:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4676:4:88",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4649:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4649:32:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4649:32:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4690:27:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4702:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4713:3:88",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4698:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4698:19:88"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4690:4:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4476:9:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4490:4:88",
                "type": ""
              }
            ],
            "src": "4325:398:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4902:228:88",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4919:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4930:2:88",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4912:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4912:21:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4912:21:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4953:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4964:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4949:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4949:18:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4969:2:88",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4942:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4942:30:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4942:30:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4992:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5003:2:88",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4988:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4988:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5008:34:88",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4981:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4981:62:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4981:62:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5063:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5074:2:88",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5059:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5059:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5079:8:88",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5052:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5052:36:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5052:36:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5097:27:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5109:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5120:3:88",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5105:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5105:19:88"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5097:4:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4879:9:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4893:4:88",
                "type": ""
              }
            ],
            "src": "4728:402:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5309:228:88",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5326:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5337:2:88",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5319:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5319:21:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5319:21:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5360:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5371:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5356:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5356:18:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5376:2:88",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5349:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5349:30:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5349:30:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5399:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5410:2:88",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5395:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5395:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5415:34:88",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5388:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5388:62:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5388:62:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5470:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5481:2:88",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5466:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5466:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5486:8:88",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5459:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5459:36:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5459:36:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5504:27:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5516:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5527:3:88",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5512:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5512:19:88"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5504:4:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5286:9:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5300:4:88",
                "type": ""
              }
            ],
            "src": "5135:402:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5716:230:88",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5733:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5744:2:88",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5726:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5726:21:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5726:21:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5767:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5778:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5763:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5763:18:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5783:2:88",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5756:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5756:30:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5756:30:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5806:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5817:2:88",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5802:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5802:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5822:34:88",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5795:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5795:62:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5795:62:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5877:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5888:2:88",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5873:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5873:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5893:10:88",
                        "type": "",
                        "value": "llowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5866:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5866:38:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5866:38:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5913:27:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5925:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5936:3:88",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5921:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5921:19:88"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5913:4:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5693:9:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5707:4:88",
                "type": ""
              }
            ],
            "src": "5542:404:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6125:223:88",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6142:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6153:2:88",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6135:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6135:21:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6135:21:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6176:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6187:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6172:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6172:18:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6192:2:88",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6165:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6165:30:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6165:30:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6215:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6226:2:88",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6211:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6211:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6231:34:88",
                        "type": "",
                        "value": "ERC20: burn from the zero addres"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6204:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6204:62:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6204:62:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6286:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6297:2:88",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6282:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6282:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6302:3:88",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6275:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6275:31:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6275:31:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6315:27:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6327:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6338:3:88",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6323:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6323:19:88"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6315:4:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6102:9:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6116:4:88",
                "type": ""
              }
            ],
            "src": "5951:397:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6527:227:88",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6544:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6555:2:88",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6537:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6537:21:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6537:21:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6578:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6589:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6574:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6574:18:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6594:2:88",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6567:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6567:30:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6567:30:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6617:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6628:2:88",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6613:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6613:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6633:34:88",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6606:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6606:62:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6606:62:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6688:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6699:2:88",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6684:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6684:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6704:7:88",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6677:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6677:35:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6677:35:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6721:27:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6733:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6744:3:88",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6729:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6729:19:88"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6721:4:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6504:9:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6518:4:88",
                "type": ""
              }
            ],
            "src": "6353:401:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6933:226:88",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6950:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6961:2:88",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6943:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6943:21:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6943:21:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6984:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6995:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6980:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6980:18:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7000:2:88",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6973:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6973:30:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6973:30:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7023:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7034:2:88",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7019:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7019:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7039:34:88",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7012:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7012:62:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7012:62:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7094:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7105:2:88",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7090:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7090:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7110:6:88",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7083:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7083:34:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7083:34:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7126:27:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7138:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7149:3:88",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7134:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7134:19:88"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7126:4:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6910:9:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6924:4:88",
                "type": ""
              }
            ],
            "src": "6759:400:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7338:179:88",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7355:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7366:2:88",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7348:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7348:21:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7348:21:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7389:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7400:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7385:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7385:18:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7405:2:88",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7378:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7378:30:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7378:30:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7428:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7439:2:88",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7424:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7424:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7444:31:88",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7417:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7417:59:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7417:59:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7485:26:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7497:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7508:2:88",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7493:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7493:18:88"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7485:4:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7315:9:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7329:4:88",
                "type": ""
              }
            ],
            "src": "7164:353:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7696:232:88",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7713:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7724:2:88",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7706:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7706:21:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7706:21:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7747:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7758:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7743:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7743:18:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7763:2:88",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7736:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7736:30:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7736:30:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7786:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7797:2:88",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7782:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7782:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7802:34:88",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7775:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7775:62:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7775:62:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7857:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7868:2:88",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7853:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7853:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7873:12:88",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7846:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7846:40:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7846:40:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7895:27:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7907:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7918:3:88",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7903:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7903:19:88"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7895:4:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7673:9:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7687:4:88",
                "type": ""
              }
            ],
            "src": "7522:406:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8107:227:88",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8124:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8135:2:88",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8117:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8117:21:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8117:21:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8158:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8169:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8154:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8154:18:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8174:2:88",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8147:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8147:30:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8147:30:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8197:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8208:2:88",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8193:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8193:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8213:34:88",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8186:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8186:62:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8186:62:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8268:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8279:2:88",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8264:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8264:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8284:7:88",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8257:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8257:35:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8257:35:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8301:27:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8313:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8324:3:88",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8309:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8309:19:88"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8301:4:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8084:9:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8098:4:88",
                "type": ""
              }
            ],
            "src": "7933:401:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8513:181:88",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8530:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8541:2:88",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8523:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8523:21:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8523:21:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8564:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8575:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8560:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8560:18:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8580:2:88",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8553:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8553:30:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8553:30:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8603:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8614:2:88",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8599:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8599:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8619:33:88",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8592:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8592:61:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8592:61:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8662:26:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8674:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8685:2:88",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8670:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8670:18:88"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8662:4:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8490:9:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8504:4:88",
                "type": ""
              }
            ],
            "src": "8339:355:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8800:76:88",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8810:26:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8822:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8833:2:88",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8818:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8818:18:88"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8810:4:88"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8852:9:88"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8863:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8845:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8845:25:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8845:25:88"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8769:9:88",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8780:6:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8791:4:88",
                "type": ""
              }
            ],
            "src": "8699:177:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8978:87:88",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8988:26:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9000:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9011:2:88",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8996:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8996:18:88"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8988:4:88"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9030:9:88"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "9045:6:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9053:4:88",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9041:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9041:17:88"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9023:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9023:36:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9023:36:88"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8947:9:88",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8958:6:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8969:4:88",
                "type": ""
              }
            ],
            "src": "8881:184:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9118:80:88",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9145:22:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9147:16:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9147:18:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9147:18:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9134:1:88"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "9141:1:88"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "9137:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9137:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9131:2:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9131:13:88"
                  },
                  "nodeType": "YulIf",
                  "src": "9128:2:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9176:16:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9187:1:88"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9190:1:88"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9183:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9183:9:88"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "9176:3:88"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9101:1:88",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9104:1:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "9110:3:88",
                "type": ""
              }
            ],
            "src": "9070:128:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9249:171:88",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9280:111:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "9301:1:88"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9308:3:88",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9313:10:88",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "9304:3:88"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9304:20:88"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9294:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9294:31:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9294:31:88"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9345:1:88",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9348:4:88",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9338:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9338:15:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9338:15:88"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "9373:1:88"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9376:4:88",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9366:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9366:15:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9366:15:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9269:1:88"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9262:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9262:9:88"
                  },
                  "nodeType": "YulIf",
                  "src": "9259:2:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9400:14:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9409:1:88"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9412:1:88"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "9405:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9405:9:88"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "9400:1:88"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9234:1:88",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9237:1:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "9243:1:88",
                "type": ""
              }
            ],
            "src": "9203:217:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9489:358:88",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9499:16:88",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9514:1:88",
                    "type": "",
                    "value": "1"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "9503:7:88",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9524:16:88",
                  "value": {
                    "name": "power_1",
                    "nodeType": "YulIdentifier",
                    "src": "9533:7:88"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "9524:5:88"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9549:13:88",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "9557:5:88"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "9549:4:88"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9613:228:88",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9658:22:88",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "9660:16:88"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9660:18:88"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9660:18:88"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "9633:4:88"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9647:1:88",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "9643:3:88"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9643:6:88"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "9651:4:88"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "9639:3:88"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9639:17:88"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "9630:2:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9630:27:88"
                        },
                        "nodeType": "YulIf",
                        "src": "9627:2:88"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9719:29:88",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9721:25:88",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "9734:5:88"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "9741:4:88"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "9730:3:88"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9730:16:88"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "9721:5:88"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "9700:8:88"
                            },
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "9710:7:88"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "9696:3:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9696:22:88"
                        },
                        "nodeType": "YulIf",
                        "src": "9693:2:88"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9761:23:88",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "9773:4:88"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "9779:4:88"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "9769:3:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9769:15:88"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "9761:4:88"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9797:34:88",
                        "value": {
                          "arguments": [
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "9813:7:88"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "9822:8:88"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "9809:3:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9809:22:88"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "9797:8:88"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "9582:8:88"
                      },
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "9592:7:88"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9579:2:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9579:21:88"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "9601:3:88",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "9575:3:88",
                    "statements": []
                  },
                  "src": "9571:270:88"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "9453:5:88",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "9460:8:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "9473:5:88",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "9480:4:88",
                "type": ""
              }
            ],
            "src": "9425:422:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9922:61:88",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9932:45:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "9962:4:88"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "9968:8:88"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "9941:20:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9941:36:88"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "9932:5:88"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "9893:4:88",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "9899:8:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "9912:5:88",
                "type": ""
              }
            ],
            "src": "9852:131:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10047:747:88",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10085:52:88",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10099:10:88",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "10108:1:88",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "10099:5:88"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "10122:5:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "10067:8:88"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10060:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10060:16:88"
                  },
                  "nodeType": "YulIf",
                  "src": "10057:2:88"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10170:52:88",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10184:10:88",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "10193:1:88",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "10184:5:88"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "10207:5:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "10156:4:88"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10149:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10149:12:88"
                  },
                  "nodeType": "YulIf",
                  "src": "10146:2:88"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10258:52:88",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "10272:10:88",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10281:1:88",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "10272:5:88"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "10295:5:88"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "10251:59:88",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10256:1:88",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10326:123:88",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "10361:22:88",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "10363:16:88"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10363:18:88"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "10363:18:88"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "10346:8:88"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10356:3:88",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "10343:2:88"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10343:17:88"
                            },
                            "nodeType": "YulIf",
                            "src": "10340:2:88"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "10396:25:88",
                            "value": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "10409:8:88"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10419:1:88",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "10405:3:88"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10405:16:88"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "10396:5:88"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "10434:5:88"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "10319:130:88",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10324:1:88",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "10238:4:88"
                  },
                  "nodeType": "YulSwitch",
                  "src": "10231:218:88"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10547:70:88",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10561:28:88",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "10574:4:88"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "10580:8:88"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "10570:3:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10570:19:88"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "10561:5:88"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "10602:5:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "10471:4:88"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10477:2:88",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "10468:2:88"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10468:12:88"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "10485:8:88"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10495:2:88",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "10482:2:88"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10482:16:88"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10464:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10464:35:88"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "10508:4:88"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10514:3:88",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "10505:2:88"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10505:13:88"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "10523:8:88"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10533:2:88",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "10520:2:88"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10520:16:88"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10501:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10501:36:88"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "10461:2:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10461:77:88"
                  },
                  "nodeType": "YulIf",
                  "src": "10458:2:88"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10626:57:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "10668:4:88"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "10674:8:88"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "10649:18:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10649:34:88"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "10630:7:88",
                      "type": ""
                    },
                    {
                      "name": "base_1",
                      "nodeType": "YulTypedName",
                      "src": "10639:6:88",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10728:22:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10730:16:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10730:18:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10730:18:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "10698:7:88"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10715:1:88",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "10711:3:88"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10711:6:88"
                          },
                          {
                            "name": "base_1",
                            "nodeType": "YulIdentifier",
                            "src": "10719:6:88"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "10707:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10707:19:88"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10695:2:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10695:32:88"
                  },
                  "nodeType": "YulIf",
                  "src": "10692:2:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10759:29:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "10772:7:88"
                      },
                      {
                        "name": "base_1",
                        "nodeType": "YulIdentifier",
                        "src": "10781:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "10768:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10768:20:88"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "10759:5:88"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "10018:4:88",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "10024:8:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "10037:5:88",
                "type": ""
              }
            ],
            "src": "9988:806:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10851:116:88",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10910:22:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10912:16:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10912:18:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10912:18:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10882:1:88"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "10875:6:88"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10875:9:88"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "10868:6:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10868:17:88"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10890:1:88"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10901:1:88",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "10897:3:88"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10897:6:88"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10905:1:88"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "10893:3:88"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10893:14:88"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "10887:2:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10887:21:88"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10864:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10864:45:88"
                  },
                  "nodeType": "YulIf",
                  "src": "10861:2:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10941:20:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10956:1:88"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10959:1:88"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "10952:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10952:9:88"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "10941:7:88"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10830:1:88",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10833:1:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "10839:7:88",
                "type": ""
              }
            ],
            "src": "10799:168:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11021:76:88",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11043:22:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11045:16:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11045:18:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11045:18:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11037:1:88"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11040:1:88"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "11034:2:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11034:8:88"
                  },
                  "nodeType": "YulIf",
                  "src": "11031:2:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11074:17:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11086:1:88"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11089:1:88"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "11082:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11082:9:88"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "11074:4:88"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11003:1:88",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11006:1:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "11012:4:88",
                "type": ""
              }
            ],
            "src": "10972:125:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11155:205:88",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11165:10:88",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "11174:1:88",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "11169:1:88",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11234:63:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "11259:3:88"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "11264:1:88"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "11255:3:88"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11255:11:88"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "11278:3:88"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "11283:1:88"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "11274:3:88"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11274:11:88"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "11268:5:88"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11268:18:88"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11248:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11248:39:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11248:39:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "11195:1:88"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11198:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "11192:2:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11192:13:88"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "11206:19:88",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11208:15:88",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "11217:1:88"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11220:2:88",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "11213:3:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11213:10:88"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "11208:1:88"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "11188:3:88",
                    "statements": []
                  },
                  "src": "11184:113:88"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11323:31:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "11336:3:88"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "11341:6:88"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "11332:3:88"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11332:16:88"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11350:1:88",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11325:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11325:27:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11325:27:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "11312:1:88"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11315:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11309:2:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11309:13:88"
                  },
                  "nodeType": "YulIf",
                  "src": "11306:2:88"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "11133:3:88",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "11138:3:88",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "11143:6:88",
                "type": ""
              }
            ],
            "src": "11102:258:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11420:325:88",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11430:22:88",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11444:1:88",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "11447:4:88"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "11440:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11440:12:88"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "11430:6:88"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11461:38:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "11491:4:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11497:1:88",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "11487:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11487:12:88"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "11465:18:88",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11538:31:88",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11540:27:88",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "11554:6:88"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11562:4:88",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "11550:3:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11550:17:88"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "11540:6:88"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "11518:18:88"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11511:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11511:26:88"
                  },
                  "nodeType": "YulIf",
                  "src": "11508:2:88"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11628:111:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11649:1:88",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11656:3:88",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11661:10:88",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "11652:3:88"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11652:20:88"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11642:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11642:31:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11642:31:88"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11693:1:88",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11696:4:88",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11686:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11686:15:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11686:15:88"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11721:1:88",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11724:4:88",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11714:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11714:15:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11714:15:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "11584:18:88"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "11607:6:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11615:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "11604:2:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11604:14:88"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "11581:2:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11581:38:88"
                  },
                  "nodeType": "YulIf",
                  "src": "11578:2:88"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "11400:4:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "11409:6:88",
                "type": ""
              }
            ],
            "src": "11365:380:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11782:95:88",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11799:1:88",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11806:3:88",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11811:10:88",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "11802:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11802:20:88"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11792:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11792:31:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11792:31:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11839:1:88",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11842:4:88",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11832:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11832:15:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11832:15:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11863:1:88",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11866:4:88",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11856:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11856:15:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11856:15:88"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "11750:127:88"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1274__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 88,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "246:2001:60:-:0;;;394:360;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1963:113:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1963:113:6;;;;2029:13;;1963:113;;;2029:13;;:5;;:13;:::i;:::-;-1:-1:-1;2052:17:6;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;579:9:60::1;:30:::0;;-1:-1:-1;;;;;579:30:60;;::::1;-1:-1:-1::0;;;;;;579:30:60;;::::1;::::0;::::1;::::0;;;619:7:::1;:26:::0;;;;::::1;::::0;;;::::1;;::::0;;670:28:::1;::::0;;-1:-1:-1;;;670:28:60;;;;579:30;;-1:-1:-1;670:26:60::1;::::0;:28:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;579:30;670:28;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;655:43;;:12;:43;;;;727:8;-1:-1:-1::0;;;;;721:24:60::1;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;708:39;;:10;:39:::0;-1:-1:-1;246:2001:60;;-1:-1:-1;246:2001:60;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;246:2001:60;;;-1:-1:-1;246:2001:60;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:88;93:13;;-1:-1:-1;;;;;135:31:88;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:303::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:2;;;357:6;349;342:22;304:2;385:40;415:9;385:40;:::i;:::-;375:50;;444:49;489:2;478:9;474:18;444:49;:::i;:::-;434:59;;294:205;;;;;:::o;504:293::-;572:6;625:2;613:9;604:7;600:23;596:32;593:2;;;646:6;638;631:22;593:2;683:9;677:16;733:4;726:5;722:16;715:5;712:27;702:2;;758:6;750;743:22;702:2;786:5;583:214;-1:-1:-1;;;583:214:88:o;802:380::-;881:1;877:12;;;;924;;;945:2;;999:4;991:6;987:17;977:27;;945:2;1052;1044:6;1041:14;1021:18;1018:38;1015:2;;;1098:10;1093:3;1089:20;1086:1;1079:31;1133:4;1130:1;1123:15;1161:4;1158:1;1151:15;1015:2;;857:325;;;:::o;:::-;246:2001:60;;;;;;",
  "deployedSourceMap": "246:2001:60:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:98:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4238:166;;;;;;:::i;:::-;;:::i;:::-;;;2880:14:88;;2873:22;2855:41;;2843:2;2828:18;4238:166:6;2810:92:88;798:213:60;;;;;;:::i;:::-;;:::i;:::-;;3229:106:6;3316:12;;3229:106;;;8845:25:88;;;8833:2;8818:18;3229:106:6;8800:76:88;4871:478:6;;;;;;:::i;:::-;;:::i;3078:91::-;;;3160:2;9023:36:88;;9011:2;8996:18;3078:91:6;8978:87:88;1301:243:60;;;;;;:::i;:::-;;:::i;5744:212:6:-;;;;;;:::i;:::-;;:::i;1590:291:60:-;;;;;;:::i;:::-;;:::i;1057:198::-;;;;;;:::i;:::-;;:::i;335:24::-;;;;;;3393:125:6;;;;;;:::i;:::-;-1:-1:-1;;;;;3493:18:6;3467:7;3493:18;;;;;;;;;;;;3393:125;279:23:60;;;;;-1:-1:-1;;;;;279:23:60;;;;;;-1:-1:-1;;;;;3086:32:88;;;3068:51;;3056:2;3041:18;279:23:60;3023:102:88;365:22:60;;;;;;2352:102:6;;;:::i;6443:405::-;;;;;;:::i;:::-;;:::i;3721:172::-;;;;;;:::i;:::-;;:::i;3951:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4066:18:6;;;4040:7;4066:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3951:149;308:21:60;;;;;-1:-1:-1;;;;;308:21:60;;;2141:98:6;2195:13;2227:5;2220:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:98;:::o;4238:166::-;4321:4;4337:39;719:10:14;4360:7:6;4369:6;4337:8;:39::i;:::-;-1:-1:-1;4393:4:6;4238:166;;;;;:::o;798:213:60:-;898:7;;871:71;;-1:-1:-1;;;;;898:7:60;907:10;927:4;934:7;871:26;:71::i;:::-;978:26;984:10;996:7;978:5;:26::i;:::-;798:213;:::o;4871:478:6:-;5007:4;5023:36;5033:6;5041:9;5052:6;5023:9;:36::i;:::-;-1:-1:-1;;;;;5097:19:6;;5070:24;5097:19;;;:11;:19;;;;;;;;719:10:14;5097:33:6;;;;;;;;5148:26;;;;5140:79;;;;-1:-1:-1;;;5140:79:6;;5744:2:88;5140:79:6;;;5726:21:88;5783:2;5763:18;;;5756:30;5822:34;5802:18;;;5795:62;-1:-1:-1;;;5873:18:88;;;5866:38;5921:19;;5140:79:6;;;;;;;;;5253:57;5262:6;719:10:14;5303:6:6;5284:16;:25;5253:8;:57::i;:::-;5338:4;5331:11;;;4871:478;;;;;;:::o;1301:243:60:-;1375:26;1381:10;1393:7;1375:5;:26::i;:::-;1464:9;;1502:10;;1514:12;;1441:96;;-1:-1:-1;;;;;1464:9:60;;1475:10;;1487:49;;1502:10;1528:7;1487:14;:49::i;:::-;1441:22;:96::i;5744:212:6:-;719:10:14;5832:4:6;5880:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5880:34:6;;;;;;;;;;5832:4;;5848:80;;5871:7;;5880:47;;5917:10;;5880:47;:::i;:::-;5848:8;:80::i;1590:291:60:-;1696:9;;1669:73;;-1:-1:-1;;;;;1696:9:60;1707:10;1727:4;1734:7;1669:26;:73::i;:::-;1803:7;;1839:12;;1853:10;;1780:94;;-1:-1:-1;;;;;1803:7:60;;1812:10;;1824:49;;1839:12;1865:7;1824:14;:49::i;1057:198::-;1132:26;1138:10;1150:7;1132:5;:26::i;:::-;1219:7;;1196:52;;-1:-1:-1;;;;;1219:7:60;1228:10;1240:7;1196:22;:52::i;2352:102:6:-;2408:13;2440:7;2433:14;;;;;:::i;6443:405::-;719:10:14;6536:4:6;6579:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6579:34:6;;;;;;;;;;6631:35;;;;6623:85;;;;-1:-1:-1;;;6623:85:6;;8135:2:88;6623:85:6;;;8117:21:88;8174:2;8154:18;;;8147:30;8213:34;8193:18;;;8186:62;-1:-1:-1;;;8264:18:88;;;8257:35;8309:19;;6623:85:6;8107:227:88;6623:85:6;6742:67;719:10:14;6765:7:6;6793:15;6774:16;:34;6742:8;:67::i;:::-;-1:-1:-1;6837:4:6;;6443:405;-1:-1:-1;;;6443:405:6:o;3721:172::-;3807:4;3823:42;719:10:14;3847:9:6;3858:6;3823:9;:42::i;10019:370::-;-1:-1:-1;;;;;10150:19:6;;10142:68;;;;-1:-1:-1;;;10142:68:6;;6961:2:88;10142:68:6;;;6943:21:88;7000:2;6980:18;;;6973:30;7039:34;7019:18;;;7012:62;-1:-1:-1;;;7090:18:88;;;7083:34;7134:19;;10142:68:6;6933:226:88;10142:68:6;-1:-1:-1;;;;;10228:21:6;;10220:68;;;;-1:-1:-1;;;10220:68:6;;4527:2:88;10220:68:6;;;4509:21:88;4566:2;4546:18;;;4539:30;4605:34;4585:18;;;4578:62;-1:-1:-1;;;4656:18:88;;;4649:32;4698:19;;10220:68:6;4499:224:88;10220:68:6;-1:-1:-1;;;;;10299:18:6;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10350:32;;8845:25:88;;;10350:32:6;;8818:18:88;10350:32:6;;;;;;;;10019:370;;;:::o;912:241:9:-;1077:68;;-1:-1:-1;;;;;2314:15:88;;;1077:68:9;;;2296:34:88;2366:15;;2346:18;;;2339:43;2398:18;;;2391:34;;;1050:96:9;;1070:5;;-1:-1:-1;;;1100:27:9;2231:18:88;;1077:68:9;;;;-1:-1:-1;;1077:68:9;;;;;;;;;;;;;;-1:-1:-1;;;;;1077:68:9;-1:-1:-1;;;;;;1077:68:9;;;;;;;;;;1050:19;:96::i;:::-;912:241;;;;:::o;8311:389:6:-;-1:-1:-1;;;;;8394:21:6;;8386:65;;;;-1:-1:-1;;;8386:65:6;;8541:2:88;8386:65:6;;;8523:21:88;8580:2;8560:18;;;8553:30;8619:33;8599:18;;;8592:61;8670:18;;8386:65:6;8513:181:88;8386:65:6;8538:6;8522:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8554:18:6;;:9;:18;;;;;;;;;;:28;;8576:6;;8554:9;:28;;8576:6;;8554:28;:::i;:::-;;;;-1:-1:-1;;8597:37:6;;8845:25:88;;;-1:-1:-1;;;;;8597:37:6;;;8614:1;;8597:37;;8833:2:88;8818:18;8597:37:6;;;;;;;8311:389;;:::o;7322:713::-;-1:-1:-1;;;;;7457:20:6;;7449:70;;;;-1:-1:-1;;;7449:70:6;;6555:2:88;7449:70:6;;;6537:21:88;6594:2;6574:18;;;6567:30;6633:34;6613:18;;;6606:62;-1:-1:-1;;;6684:18:88;;;6677:35;6729:19;;7449:70:6;6527:227:88;7449:70:6;-1:-1:-1;;;;;7537:23:6;;7529:71;;;;-1:-1:-1;;;7529:71:6;;3720:2:88;7529:71:6;;;3702:21:88;3759:2;3739:18;;;3732:30;3798:34;3778:18;;;3771:62;-1:-1:-1;;;3849:18:88;;;3842:33;3892:19;;7529:71:6;3692:225:88;7529:71:6;-1:-1:-1;;;;;7693:17:6;;7669:21;7693:17;;;;;;;;;;;7728:23;;;;7720:74;;;;-1:-1:-1;;;7720:74:6;;4930:2:88;7720:74:6;;;4912:21:88;4969:2;4949:18;;;4942:30;5008:34;4988:18;;;4981:62;-1:-1:-1;;;5059:18:88;;;5052:36;5105:19;;7720:74:6;4902:228:88;7720:74:6;-1:-1:-1;;;;;7828:17:6;;;:9;:17;;;;;;;;;;;7848:22;;;7828:42;;7890:20;;;;;;;;:30;;7864:6;;7828:9;7890:30;;7864:6;;7890:30;:::i;:::-;;;;;;;;7953:9;-1:-1:-1;;;;;7936:35:6;7945:6;-1:-1:-1;;;;;7936:35:6;;7964:6;7936:35;;;;8845:25:88;;8833:2;8818:18;;8800:76;7936:35:6;;;;;;;;7982:46;9020:576;;-1:-1:-1;;;;;9103:21:6;;9095:67;;;;-1:-1:-1;;;9095:67:6;;6153:2:88;9095:67:6;;;6135:21:88;6192:2;6172:18;;;6165:30;6231:34;6211:18;;;6204:62;-1:-1:-1;;;6282:18:88;;;6275:31;6323:19;;9095:67:6;6125:223:88;9095:67:6;-1:-1:-1;;;;;9258:18:6;;9233:22;9258:18;;;;;;;;;;;9294:24;;;;9286:71;;;;-1:-1:-1;;;9286:71:6;;4124:2:88;9286:71:6;;;4106:21:88;4163:2;4143:18;;;4136:30;4202:34;4182:18;;;4175:62;-1:-1:-1;;;4253:18:88;;;4246:32;4295:19;;9286:71:6;4096:224:88;9286:71:6;-1:-1:-1;;;;;9391:18:6;;:9;:18;;;;;;;;;;9412:23;;;9391:44;;9455:12;:22;;9429:6;;9391:9;9455:22;;9429:6;;9455:22;:::i;:::-;;;;-1:-1:-1;;9493:37:6;;8845:25:88;;;9519:1:6;;-1:-1:-1;;;;;9493:37:6;;;;;8833:2:88;8818:18;9493:37:6;8800:76:88;9541:48:6;9020:576;;;:::o;1887:358:60:-;1986:4;2022:11;2006:13;:27;2002:213;;;2066:27;2082:11;2066:13;:27;:::i;:::-;2059:35;;:2;:35;:::i;:::-;2048:46;;;;:::i;:::-;;;2002:213;;;2131:11;2115:13;:27;2111:104;;;2176:27;2190:13;2176:11;:27;:::i;:::-;2169:35;;:2;:35;:::i;:::-;2158:46;;;;:::i;:::-;;;2111:104;-1:-1:-1;2231:7:60;1887:358;-1:-1:-1;;1887:358:60:o;701:205:9:-;840:58;;-1:-1:-1;;;;;2628:32:88;;840:58:9;;;2610:51:88;2677:18;;;2670:34;;;813:86:9;;833:5;;-1:-1:-1;;;863:23:9;2583:18:88;;840:58:9;2565:145:88;3207:706:9;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:9;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:9;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:9;;7724:2:88;3811:85:9;;;7706:21:88;7763:2;7743:18;;;7736:30;7802:34;7782:18;;;7775:62;-1:-1:-1;;;7853:18:88;;;7846:40;7903:19;;3811:85:9;7696:232:88;3514:223:13;3647:12;3678:52;3700:6;3708:4;3714:1;3717:12;3678:21;:52::i;:::-;3671:59;3514:223;-1:-1:-1;;;;3514:223:13:o;4601:499::-;4766:12;4823:5;4798:21;:30;;4790:81;;;;-1:-1:-1;;;4790:81:13;;5337:2:88;4790:81:13;;;5319:21:88;5376:2;5356:18;;;5349:30;5415:34;5395:18;;;5388:62;-1:-1:-1;;;5466:18:88;;;5459:36;5512:19;;4790:81:13;5309:228:88;4790:81:13;1087:20;;4881:60;;;;-1:-1:-1;;;4881:60:13;;7366:2:88;4881:60:13;;;7348:21:88;7405:2;7385:18;;;7378:30;7444:31;7424:18;;;7417:59;7493:18;;4881:60:13;7338:179:88;4881:60:13;4953:12;4967:23;4994:6;-1:-1:-1;;;;;4994:11:13;5013:5;5020:4;4994:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4952:73;;;;5042:51;5059:7;5068:10;5080:12;5042:16;:51::i;:::-;5035:58;4601:499;-1:-1:-1;;;;;;;4601:499:13:o;7214:692::-;7360:12;7388:7;7384:516;;;-1:-1:-1;7418:10:13;7411:17;;7384:516;7529:17;;:21;7525:365;;7723:10;7717:17;7783:15;7770:10;7766:2;7762:19;7755:44;7672:145;7862:12;7855:20;;-1:-1:-1;;;7855:20:13;;;;;;;;:::i;14:173:88:-;82:20;;-1:-1:-1;;;;;131:31:88;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:196::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;393:270::-;461:6;469;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;;619:38;653:2;642:9;638:18;619:38;:::i;:::-;609:48;;480:183;;;;;:::o;668:338::-;745:6;753;761;814:2;802:9;793:7;789:23;785:32;782:2;;;835:6;827;820:22;782:2;863:29;882:9;863:29;:::i;:::-;853:39;;911:38;945:2;934:9;930:18;911:38;:::i;:::-;901:48;;996:2;985:9;981:18;968:32;958:42;;772:234;;;;;:::o;1011:264::-;1079:6;1087;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1161:6;1153;1146:22;1108:2;1189:29;1208:9;1189:29;:::i;:::-;1179:39;1265:2;1250:18;;;;1237:32;;-1:-1:-1;;;1098:177:88:o;1280:297::-;1347:6;1400:2;1388:9;1379:7;1375:23;1371:32;1368:2;;;1421:6;1413;1406:22;1368:2;1458:9;1452:16;1511:5;1504:13;1497:21;1490:5;1487:32;1477:2;;1538:6;1530;1523:22;1582:190;1641:6;1694:2;1682:9;1673:7;1669:23;1665:32;1662:2;;;1715:6;1707;1700:22;1662:2;-1:-1:-1;1743:23:88;;1652:120;-1:-1:-1;1652:120:88:o;1777:274::-;1906:3;1944:6;1938:13;1960:53;2006:6;2001:3;1994:4;1986:6;1982:17;1960:53;:::i;:::-;2029:16;;;;;1914:137;-1:-1:-1;;1914:137:88:o;3130:383::-;3279:2;3268:9;3261:21;3242:4;3311:6;3305:13;3354:6;3349:2;3338:9;3334:18;3327:34;3370:66;3429:6;3424:2;3413:9;3409:18;3404:2;3396:6;3392:15;3370:66;:::i;:::-;3497:2;3476:15;-1:-1:-1;;3472:29:88;3457:45;;;;3504:2;3453:54;;3251:262;-1:-1:-1;;3251:262:88:o;9070:128::-;9110:3;9141:1;9137:6;9134:1;9131:13;9128:2;;;9147:18;;:::i;:::-;-1:-1:-1;9183:9:88;;9118:80::o;9203:217::-;9243:1;9269;9259:2;;-1:-1:-1;;;9294:31:88;;9348:4;9345:1;9338:15;9376:4;9301:1;9366:15;9259:2;-1:-1:-1;9405:9:88;;9249:171::o;9425:422::-;9514:1;9557:5;9514:1;9571:270;9592:7;9582:8;9579:21;9571:270;;;9651:4;9647:1;9643:6;9639:17;9633:4;9630:27;9627:2;;;9660:18;;:::i;:::-;9710:7;9700:8;9696:22;9693:2;;;9730:16;;;;9693:2;9809:22;;;;9769:15;;;;9571:270;;;9575:3;9489:358;;;;;:::o;9852:131::-;9912:5;9941:36;9968:8;9962:4;10037:5;10067:8;10057:2;;-1:-1:-1;10108:1:88;10122:5;;10057:2;10156:4;10146:2;;-1:-1:-1;10193:1:88;10207:5;;10146:2;10238:4;10256:1;10251:59;;;;10324:1;10319:130;;;;10231:218;;10251:59;10281:1;10272:10;;10295:5;;;10319:130;10356:3;10346:8;10343:17;10340:2;;;10363:18;;:::i;:::-;-1:-1:-1;;10419:1:88;10405:16;;10434:5;;10231:218;;10533:2;10523:8;10520:16;10514:3;10508:4;10505:13;10501:36;10495:2;10485:8;10482:16;10477:2;10471:4;10468:12;10464:35;10461:77;10458:2;;;-1:-1:-1;10570:19:88;;;10602:5;;10458:2;10649:34;10674:8;10668:4;10649:34;:::i;:::-;10719:6;10715:1;10711:6;10707:19;10698:7;10695:32;10692:2;;;10730:18;;:::i;:::-;10768:20;;10047:747;-1:-1:-1;;;10047:747:88:o;10799:168::-;10839:7;10905:1;10901;10897:6;10893:14;10890:1;10887:21;10882:1;10875:9;10868:17;10864:45;10861:2;;;10912:18;;:::i;:::-;-1:-1:-1;10952:9:88;;10851:116::o;10972:125::-;11012:4;11040:1;11037;11034:8;11031:2;;;11045:18;;:::i;:::-;-1:-1:-1;11082:9:88;;11021:76::o;11102:258::-;11174:1;11184:113;11198:6;11195:1;11192:13;11184:113;;;11274:11;;;11268:18;11255:11;;;11248:39;11220:2;11213:10;11184:113;;;11315:6;11312:1;11309:13;11306:2;;;-1:-1:-1;;11350:1:88;11332:16;;11325:27;11155:205::o;11365:380::-;11444:1;11440:12;;;;11487;;;11508:2;;11562:4;11554:6;11550:17;11540:27;;11508:2;11615;11607:6;11604:14;11584:18;11581:38;11578:2;;;11661:10;11656:3;11652:20;11649:1;11642:31;11696:4;11693:1;11686:15;11724:4;11721:1;11714:15;11578:2;;11420:325;;;:::o;11750:127::-;11811:10;11806:3;11802:20;11799:1;11792:31;11842:4;11839:1;11832:15;11866:4;11863:1;11856:15",
  "source": "// contracts/Messages.sol\n// SPDX-License-Identifier: Apache 2\n\npragma solidity ^0.8.0;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\ncontract Migrator is ERC20 {\n    IERC20 public fromAsset;\n    IERC20 public toAsset;\n    uint public fromDecimals;\n    uint public toDecimals;\n\n    constructor (\n        address _fromAsset,\n        address _toAsset\n    )\n    // LP shares track the underlying toToken amount\n    ERC20(\"Token Migration Pool\", \"Migrator-LP\") {\n        fromAsset = IERC20(_fromAsset);\n        toAsset = IERC20(_toAsset);\n        fromDecimals = ERC20(_fromAsset).decimals();\n        toDecimals = ERC20(_toAsset).decimals();\n    }\n\n    // _amount denominated in toAsset\n    function add(uint _amount) external {\n        // deposit toAsset\n        SafeERC20.safeTransferFrom(toAsset, msg.sender, address(this), _amount);\n        // mint LP shares\n        _mint(msg.sender, _amount);\n    }\n\n    // _amount denominated in LP shares\n    function remove(uint _amount) external {\n        // burn LP shares\n        _burn(msg.sender, _amount);\n        // send out toAsset\n        SafeERC20.safeTransfer(toAsset, msg.sender, _amount);\n    }\n\n    // _amount denominated in LP shares\n    function claim(uint _amount) external {\n        // burn LP shares\n        _burn(msg.sender, _amount);\n        // send out fromAsset\n        SafeERC20.safeTransfer(fromAsset, msg.sender, adjustDecimals(toDecimals, fromDecimals, _amount));\n    }\n\n    // _amount denominated in fromToken\n    function migrate(uint _amount) external {\n        // deposit fromAsset\n        SafeERC20.safeTransferFrom(fromAsset, msg.sender, address(this), _amount);\n        // send out toAsset\n        SafeERC20.safeTransfer(toAsset, msg.sender, adjustDecimals(fromDecimals, toDecimals, _amount));\n    }\n\n    function adjustDecimals(uint _fromDecimals, uint _toDecimals, uint _amount) internal pure returns (uint) {\n        if (_fromDecimals > _toDecimals){\n            _amount /= 10 ** (_fromDecimals - _toDecimals);\n        } else if (_fromDecimals < _toDecimals) {\n            _amount *= 10 ** (_toDecimals - _fromDecimals);\n        }\n        return _amount;\n    }\n}\n",
  "sourcePath": "/Users/nguyenthithuthao/Downloads/Documents/wormhole-kip7/contracts/bridge/utils/Migrator.sol",
  "ast": {
    "absolutePath": "project:/contracts/bridge/utils/Migrator.sol",
    "exportedSymbols": {
      "Address": [
        1981
      ],
      "Context": [
        2003
      ],
      "ERC20": [
        1196
      ],
      "IERC20": [
        1274
      ],
      "IERC20Metadata": [
        1299
      ],
      "Migrator": [
        10225
      ],
      "SafeERC20": [
        1523
      ]
    },
    "id": 10226,
    "license": "Apache 2",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10024,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "64:23:60"
      },
      {
        "id": 10025,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "88:33:60"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 10026,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10226,
        "sourceUnit": 1197,
        "src": "123:55:60",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 10027,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10226,
        "sourceUnit": 1524,
        "src": "179:65:60",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10028,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1196,
              "src": "267:5:60"
            },
            "id": 10029,
            "nodeType": "InheritanceSpecifier",
            "src": "267:5:60"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10225,
        "linearizedBaseContracts": [
          10225,
          1196,
          1299,
          1274,
          2003
        ],
        "name": "Migrator",
        "nameLocation": "255:8:60",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "86e89843",
            "id": 10032,
            "mutability": "mutable",
            "name": "fromAsset",
            "nameLocation": "293:9:60",
            "nodeType": "VariableDeclaration",
            "scope": 10225,
            "src": "279:23:60",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1274",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 10031,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10030,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1274,
                "src": "279:6:60"
              },
              "referencedDeclaration": 1274,
              "src": "279:6:60",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1274",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f1354c08",
            "id": 10035,
            "mutability": "mutable",
            "name": "toAsset",
            "nameLocation": "322:7:60",
            "nodeType": "VariableDeclaration",
            "scope": 10225,
            "src": "308:21:60",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1274",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 10034,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10033,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1274,
                "src": "308:6:60"
              },
              "referencedDeclaration": 1274,
              "src": "308:6:60",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1274",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4d92626a",
            "id": 10037,
            "mutability": "mutable",
            "name": "fromDecimals",
            "nameLocation": "347:12:60",
            "nodeType": "VariableDeclaration",
            "scope": 10225,
            "src": "335:24:60",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10036,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "335:4:60",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "92e40411",
            "id": 10039,
            "mutability": "mutable",
            "name": "toDecimals",
            "nameLocation": "377:10:60",
            "nodeType": "VariableDeclaration",
            "scope": 10225,
            "src": "365:22:60",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10038,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "365:4:60",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 10078,
              "nodeType": "Block",
              "src": "569:185:60",
              "statements": [
                {
                  "expression": {
                    "id": 10054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10050,
                      "name": "fromAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10032,
                      "src": "579:9:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1274",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10052,
                          "name": "_fromAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10041,
                          "src": "598:10:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 10051,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1274,
                        "src": "591:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1274_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 10053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "591:18:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1274",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "579:30:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1274",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 10055,
                  "nodeType": "ExpressionStatement",
                  "src": "579:30:60"
                },
                {
                  "expression": {
                    "id": 10060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10056,
                      "name": "toAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10035,
                      "src": "619:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1274",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10058,
                          "name": "_toAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10043,
                          "src": "636:8:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 10057,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1274,
                        "src": "629:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1274_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 10059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "629:16:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1274",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "619:26:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1274",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 10061,
                  "nodeType": "ExpressionStatement",
                  "src": "619:26:60"
                },
                {
                  "expression": {
                    "id": 10068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10062,
                      "name": "fromDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10037,
                      "src": "655:12:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 10064,
                              "name": "_fromAsset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10041,
                              "src": "676:10:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 10063,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1196,
                            "src": "670:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$1196_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 10065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "670:17:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$1196",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 10066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 725,
                        "src": "670:26:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 10067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "670:28:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "655:43:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10069,
                  "nodeType": "ExpressionStatement",
                  "src": "655:43:60"
                },
                {
                  "expression": {
                    "id": 10076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10070,
                      "name": "toDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10039,
                      "src": "708:10:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 10072,
                              "name": "_toAsset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10043,
                              "src": "727:8:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 10071,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1196,
                            "src": "721:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$1196_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 10073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "721:15:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$1196",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 10074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 725,
                        "src": "721:24:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 10075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "721:26:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "708:39:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10077,
                  "nodeType": "ExpressionStatement",
                  "src": "708:39:60"
                }
              ]
            },
            "id": 10079,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "546f6b656e204d6967726174696f6e20506f6f6c",
                    "id": 10046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "530:22:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b7581d2db82d686fb6640cb1bc1a42697c4e8af03ce403e1ff83bc6764947338",
                      "typeString": "literal_string \"Token Migration Pool\""
                    },
                    "value": "Token Migration Pool"
                  },
                  {
                    "hexValue": "4d69677261746f722d4c50",
                    "id": 10047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "554:13:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7d22ab9410c85ca9187d0c61d998cc712aa7d733ffd448fbf289492037e66a5e",
                      "typeString": "literal_string \"Migrator-LP\""
                    },
                    "value": "Migrator-LP"
                  }
                ],
                "id": 10048,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 10045,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1196,
                  "src": "524:5:60"
                },
                "nodeType": "ModifierInvocation",
                "src": "524:44:60"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10041,
                  "mutability": "mutable",
                  "name": "_fromAsset",
                  "nameLocation": "424:10:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10079,
                  "src": "416:18:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10040,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "416:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10043,
                  "mutability": "mutable",
                  "name": "_toAsset",
                  "nameLocation": "452:8:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10079,
                  "src": "444:16:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "444:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "406:60:60"
            },
            "returnParameters": {
              "id": 10049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "569:0:60"
            },
            "scope": 10225,
            "src": "394:360:60",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10103,
              "nodeType": "Block",
              "src": "834:177:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10087,
                        "name": "toAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10035,
                        "src": "898:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1274",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 10088,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "907:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "907:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10092,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "927:4:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Migrator_$10225",
                              "typeString": "contract Migrator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Migrator_$10225",
                              "typeString": "contract Migrator"
                            }
                          ],
                          "id": 10091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "919:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10090,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "919:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "919:13:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10094,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10081,
                        "src": "934:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1274",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10084,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1523,
                        "src": "871:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1523_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 10086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1356,
                      "src": "871:26:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1274_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 10095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "871:71:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10096,
                  "nodeType": "ExpressionStatement",
                  "src": "871:71:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10098,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "984:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "984:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10100,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10081,
                        "src": "996:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10097,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1056,
                      "src": "978:5:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "978:26:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10102,
                  "nodeType": "ExpressionStatement",
                  "src": "978:26:60"
                }
              ]
            },
            "functionSelector": "1003e2d2",
            "id": 10104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nameLocation": "807:3:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10081,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "816:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10104,
                  "src": "811:12:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10080,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "811:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "810:14:60"
            },
            "returnParameters": {
              "id": 10083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "834:0:60"
            },
            "scope": 10225,
            "src": "798:213:60",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10124,
              "nodeType": "Block",
              "src": "1096:159:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10110,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1138:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1138:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10112,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10106,
                        "src": "1150:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10109,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1128,
                      "src": "1132:5:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1132:26:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10114,
                  "nodeType": "ExpressionStatement",
                  "src": "1132:26:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10118,
                        "name": "toAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10035,
                        "src": "1219:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1274",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 10119,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1228:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1228:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10121,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10106,
                        "src": "1240:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1274",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10115,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1523,
                        "src": "1196:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1523_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 10117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1330,
                      "src": "1196:22:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1274_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 10122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1196:52:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10123,
                  "nodeType": "ExpressionStatement",
                  "src": "1196:52:60"
                }
              ]
            },
            "functionSelector": "4cc82215",
            "id": 10125,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "remove",
            "nameLocation": "1066:6:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10106,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1078:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10125,
                  "src": "1073:12:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10105,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1073:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1072:14:60"
            },
            "returnParameters": {
              "id": 10108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1096:0:60"
            },
            "scope": 10225,
            "src": "1057:198:60",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10149,
              "nodeType": "Block",
              "src": "1339:205:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10131,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1381:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1381:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10133,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10127,
                        "src": "1393:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10130,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1128,
                      "src": "1375:5:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1375:26:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10135,
                  "nodeType": "ExpressionStatement",
                  "src": "1375:26:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10139,
                        "name": "fromAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10032,
                        "src": "1464:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1274",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 10140,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1475:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1475:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10143,
                            "name": "toDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10039,
                            "src": "1502:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 10144,
                            "name": "fromDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10037,
                            "src": "1514:12:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 10145,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10127,
                            "src": "1528:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 10142,
                          "name": "adjustDecimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10224,
                          "src": "1487:14:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 10146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1487:49:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1274",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10136,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1523,
                        "src": "1441:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1523_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 10138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1330,
                      "src": "1441:22:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1274_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 10147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1441:96:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10148,
                  "nodeType": "ExpressionStatement",
                  "src": "1441:96:60"
                }
              ]
            },
            "functionSelector": "379607f5",
            "id": 10150,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "1310:5:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10127,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1321:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10150,
                  "src": "1316:12:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10126,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1316:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1315:14:60"
            },
            "returnParameters": {
              "id": 10129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1339:0:60"
            },
            "scope": 10225,
            "src": "1301:243:60",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10181,
              "nodeType": "Block",
              "src": "1630:251:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10158,
                        "name": "fromAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10032,
                        "src": "1696:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1274",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 10159,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1707:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1707:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10163,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1727:4:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Migrator_$10225",
                              "typeString": "contract Migrator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Migrator_$10225",
                              "typeString": "contract Migrator"
                            }
                          ],
                          "id": 10162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1719:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10161,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1719:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1719:13:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10165,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10152,
                        "src": "1734:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1274",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10155,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1523,
                        "src": "1669:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1523_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 10157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1356,
                      "src": "1669:26:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1274_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 10166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1669:73:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10167,
                  "nodeType": "ExpressionStatement",
                  "src": "1669:73:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10171,
                        "name": "toAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10035,
                        "src": "1803:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1274",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 10172,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1812:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1812:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10175,
                            "name": "fromDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10037,
                            "src": "1839:12:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 10176,
                            "name": "toDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10039,
                            "src": "1853:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 10177,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10152,
                            "src": "1865:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 10174,
                          "name": "adjustDecimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10224,
                          "src": "1824:14:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 10178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1824:49:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1274",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10168,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1523,
                        "src": "1780:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1523_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 10170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1330,
                      "src": "1780:22:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1274_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 10179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1780:94:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10180,
                  "nodeType": "ExpressionStatement",
                  "src": "1780:94:60"
                }
              ]
            },
            "functionSelector": "454b0608",
            "id": 10182,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrate",
            "nameLocation": "1599:7:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10152,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1612:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10182,
                  "src": "1607:12:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10151,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1607:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1606:14:60"
            },
            "returnParameters": {
              "id": 10154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1630:0:60"
            },
            "scope": 10225,
            "src": "1590:291:60",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10223,
              "nodeType": "Block",
              "src": "1992:253:60",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10193,
                      "name": "_fromDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10184,
                      "src": "2006:13:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 10194,
                      "name": "_toDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10186,
                      "src": "2022:11:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2006:27:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 10206,
                        "name": "_fromDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10184,
                        "src": "2115:13:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 10207,
                        "name": "_toDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10186,
                        "src": "2131:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2115:27:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 10219,
                    "nodeType": "IfStatement",
                    "src": "2111:104:60",
                    "trueBody": {
                      "id": 10218,
                      "nodeType": "Block",
                      "src": "2144:71:60",
                      "statements": [
                        {
                          "expression": {
                            "id": 10216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 10209,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10188,
                              "src": "2158:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "*=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 10215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 10210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2169:2:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 10213,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 10211,
                                      "name": "_toDecimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10186,
                                      "src": "2176:11:60",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 10212,
                                      "name": "_fromDecimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10184,
                                      "src": "2190:13:60",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "2176:27:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 10214,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2175:29:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2169:35:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2158:46:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 10217,
                          "nodeType": "ExpressionStatement",
                          "src": "2158:46:60"
                        }
                      ]
                    }
                  },
                  "id": 10220,
                  "nodeType": "IfStatement",
                  "src": "2002:213:60",
                  "trueBody": {
                    "id": 10205,
                    "nodeType": "Block",
                    "src": "2034:71:60",
                    "statements": [
                      {
                        "expression": {
                          "id": 10203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10196,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10188,
                            "src": "2048:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "/=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 10202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 10197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2059:2:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 10200,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 10198,
                                    "name": "_fromDecimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10184,
                                    "src": "2066:13:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 10199,
                                    "name": "_toDecimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10186,
                                    "src": "2082:11:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2066:27:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 10201,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2065:29:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2059:35:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2048:46:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10204,
                        "nodeType": "ExpressionStatement",
                        "src": "2048:46:60"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 10221,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10188,
                    "src": "2231:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10192,
                  "id": 10222,
                  "nodeType": "Return",
                  "src": "2224:14:60"
                }
              ]
            },
            "id": 10224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "adjustDecimals",
            "nameLocation": "1896:14:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10184,
                  "mutability": "mutable",
                  "name": "_fromDecimals",
                  "nameLocation": "1916:13:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10224,
                  "src": "1911:18:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10183,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1911:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10186,
                  "mutability": "mutable",
                  "name": "_toDecimals",
                  "nameLocation": "1936:11:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10224,
                  "src": "1931:16:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10185,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1931:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10188,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1954:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10224,
                  "src": "1949:12:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10187,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1949:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1910:52:60"
            },
            "returnParameters": {
              "id": 10192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10191,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10224,
                  "src": "1986:4:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10190,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1986:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1985:6:60"
            },
            "scope": 10225,
            "src": "1887:358:60",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 10226,
        "src": "246:2001:60",
        "usedErrors": []
      }
    ],
    "src": "64:2184:60"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/bridge/utils/Migrator.sol",
    "exportedSymbols": {
      "Address": [
        1981
      ],
      "Context": [
        2003
      ],
      "ERC20": [
        1196
      ],
      "IERC20": [
        1274
      ],
      "IERC20Metadata": [
        1299
      ],
      "Migrator": [
        10225
      ],
      "SafeERC20": [
        1523
      ]
    },
    "id": 10226,
    "license": "Apache 2",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10024,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "64:23:60"
      },
      {
        "id": 10025,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "88:33:60"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 10026,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10226,
        "sourceUnit": 1197,
        "src": "123:55:60",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 10027,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10226,
        "sourceUnit": 1524,
        "src": "179:65:60",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10028,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1196,
              "src": "267:5:60"
            },
            "id": 10029,
            "nodeType": "InheritanceSpecifier",
            "src": "267:5:60"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10225,
        "linearizedBaseContracts": [
          10225,
          1196,
          1299,
          1274,
          2003
        ],
        "name": "Migrator",
        "nameLocation": "255:8:60",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "86e89843",
            "id": 10032,
            "mutability": "mutable",
            "name": "fromAsset",
            "nameLocation": "293:9:60",
            "nodeType": "VariableDeclaration",
            "scope": 10225,
            "src": "279:23:60",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1274",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 10031,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10030,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1274,
                "src": "279:6:60"
              },
              "referencedDeclaration": 1274,
              "src": "279:6:60",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1274",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f1354c08",
            "id": 10035,
            "mutability": "mutable",
            "name": "toAsset",
            "nameLocation": "322:7:60",
            "nodeType": "VariableDeclaration",
            "scope": 10225,
            "src": "308:21:60",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1274",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 10034,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10033,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1274,
                "src": "308:6:60"
              },
              "referencedDeclaration": 1274,
              "src": "308:6:60",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1274",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4d92626a",
            "id": 10037,
            "mutability": "mutable",
            "name": "fromDecimals",
            "nameLocation": "347:12:60",
            "nodeType": "VariableDeclaration",
            "scope": 10225,
            "src": "335:24:60",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10036,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "335:4:60",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "92e40411",
            "id": 10039,
            "mutability": "mutable",
            "name": "toDecimals",
            "nameLocation": "377:10:60",
            "nodeType": "VariableDeclaration",
            "scope": 10225,
            "src": "365:22:60",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10038,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "365:4:60",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 10078,
              "nodeType": "Block",
              "src": "569:185:60",
              "statements": [
                {
                  "expression": {
                    "id": 10054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10050,
                      "name": "fromAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10032,
                      "src": "579:9:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1274",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10052,
                          "name": "_fromAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10041,
                          "src": "598:10:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 10051,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1274,
                        "src": "591:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1274_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 10053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "591:18:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1274",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "579:30:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1274",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 10055,
                  "nodeType": "ExpressionStatement",
                  "src": "579:30:60"
                },
                {
                  "expression": {
                    "id": 10060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10056,
                      "name": "toAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10035,
                      "src": "619:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1274",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10058,
                          "name": "_toAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10043,
                          "src": "636:8:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 10057,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1274,
                        "src": "629:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1274_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 10059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "629:16:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1274",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "619:26:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1274",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 10061,
                  "nodeType": "ExpressionStatement",
                  "src": "619:26:60"
                },
                {
                  "expression": {
                    "id": 10068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10062,
                      "name": "fromDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10037,
                      "src": "655:12:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 10064,
                              "name": "_fromAsset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10041,
                              "src": "676:10:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 10063,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1196,
                            "src": "670:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$1196_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 10065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "670:17:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$1196",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 10066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 725,
                        "src": "670:26:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 10067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "670:28:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "655:43:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10069,
                  "nodeType": "ExpressionStatement",
                  "src": "655:43:60"
                },
                {
                  "expression": {
                    "id": 10076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10070,
                      "name": "toDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10039,
                      "src": "708:10:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 10072,
                              "name": "_toAsset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10043,
                              "src": "727:8:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 10071,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1196,
                            "src": "721:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$1196_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 10073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "721:15:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$1196",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 10074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 725,
                        "src": "721:24:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 10075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "721:26:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "708:39:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10077,
                  "nodeType": "ExpressionStatement",
                  "src": "708:39:60"
                }
              ]
            },
            "id": 10079,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "546f6b656e204d6967726174696f6e20506f6f6c",
                    "id": 10046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "530:22:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b7581d2db82d686fb6640cb1bc1a42697c4e8af03ce403e1ff83bc6764947338",
                      "typeString": "literal_string \"Token Migration Pool\""
                    },
                    "value": "Token Migration Pool"
                  },
                  {
                    "hexValue": "4d69677261746f722d4c50",
                    "id": 10047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "554:13:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7d22ab9410c85ca9187d0c61d998cc712aa7d733ffd448fbf289492037e66a5e",
                      "typeString": "literal_string \"Migrator-LP\""
                    },
                    "value": "Migrator-LP"
                  }
                ],
                "id": 10048,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 10045,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1196,
                  "src": "524:5:60"
                },
                "nodeType": "ModifierInvocation",
                "src": "524:44:60"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10041,
                  "mutability": "mutable",
                  "name": "_fromAsset",
                  "nameLocation": "424:10:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10079,
                  "src": "416:18:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10040,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "416:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10043,
                  "mutability": "mutable",
                  "name": "_toAsset",
                  "nameLocation": "452:8:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10079,
                  "src": "444:16:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "444:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "406:60:60"
            },
            "returnParameters": {
              "id": 10049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "569:0:60"
            },
            "scope": 10225,
            "src": "394:360:60",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10103,
              "nodeType": "Block",
              "src": "834:177:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10087,
                        "name": "toAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10035,
                        "src": "898:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1274",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 10088,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "907:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "907:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10092,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "927:4:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Migrator_$10225",
                              "typeString": "contract Migrator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Migrator_$10225",
                              "typeString": "contract Migrator"
                            }
                          ],
                          "id": 10091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "919:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10090,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "919:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "919:13:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10094,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10081,
                        "src": "934:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1274",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10084,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1523,
                        "src": "871:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1523_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 10086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1356,
                      "src": "871:26:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1274_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 10095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "871:71:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10096,
                  "nodeType": "ExpressionStatement",
                  "src": "871:71:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10098,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "984:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "984:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10100,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10081,
                        "src": "996:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10097,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1056,
                      "src": "978:5:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "978:26:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10102,
                  "nodeType": "ExpressionStatement",
                  "src": "978:26:60"
                }
              ]
            },
            "functionSelector": "1003e2d2",
            "id": 10104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nameLocation": "807:3:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10081,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "816:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10104,
                  "src": "811:12:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10080,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "811:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "810:14:60"
            },
            "returnParameters": {
              "id": 10083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "834:0:60"
            },
            "scope": 10225,
            "src": "798:213:60",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10124,
              "nodeType": "Block",
              "src": "1096:159:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10110,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1138:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1138:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10112,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10106,
                        "src": "1150:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10109,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1128,
                      "src": "1132:5:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1132:26:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10114,
                  "nodeType": "ExpressionStatement",
                  "src": "1132:26:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10118,
                        "name": "toAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10035,
                        "src": "1219:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1274",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 10119,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1228:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1228:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10121,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10106,
                        "src": "1240:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1274",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10115,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1523,
                        "src": "1196:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1523_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 10117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1330,
                      "src": "1196:22:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1274_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 10122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1196:52:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10123,
                  "nodeType": "ExpressionStatement",
                  "src": "1196:52:60"
                }
              ]
            },
            "functionSelector": "4cc82215",
            "id": 10125,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "remove",
            "nameLocation": "1066:6:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10106,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1078:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10125,
                  "src": "1073:12:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10105,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1073:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1072:14:60"
            },
            "returnParameters": {
              "id": 10108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1096:0:60"
            },
            "scope": 10225,
            "src": "1057:198:60",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10149,
              "nodeType": "Block",
              "src": "1339:205:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10131,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1381:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1381:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10133,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10127,
                        "src": "1393:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10130,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1128,
                      "src": "1375:5:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1375:26:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10135,
                  "nodeType": "ExpressionStatement",
                  "src": "1375:26:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10139,
                        "name": "fromAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10032,
                        "src": "1464:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1274",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 10140,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1475:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1475:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10143,
                            "name": "toDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10039,
                            "src": "1502:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 10144,
                            "name": "fromDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10037,
                            "src": "1514:12:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 10145,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10127,
                            "src": "1528:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 10142,
                          "name": "adjustDecimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10224,
                          "src": "1487:14:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 10146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1487:49:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1274",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10136,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1523,
                        "src": "1441:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1523_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 10138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1330,
                      "src": "1441:22:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1274_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 10147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1441:96:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10148,
                  "nodeType": "ExpressionStatement",
                  "src": "1441:96:60"
                }
              ]
            },
            "functionSelector": "379607f5",
            "id": 10150,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "1310:5:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10127,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1321:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10150,
                  "src": "1316:12:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10126,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1316:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1315:14:60"
            },
            "returnParameters": {
              "id": 10129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1339:0:60"
            },
            "scope": 10225,
            "src": "1301:243:60",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10181,
              "nodeType": "Block",
              "src": "1630:251:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10158,
                        "name": "fromAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10032,
                        "src": "1696:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1274",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 10159,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1707:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1707:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10163,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1727:4:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Migrator_$10225",
                              "typeString": "contract Migrator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Migrator_$10225",
                              "typeString": "contract Migrator"
                            }
                          ],
                          "id": 10162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1719:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10161,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1719:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1719:13:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10165,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10152,
                        "src": "1734:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1274",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10155,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1523,
                        "src": "1669:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1523_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 10157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1356,
                      "src": "1669:26:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1274_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 10166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1669:73:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10167,
                  "nodeType": "ExpressionStatement",
                  "src": "1669:73:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10171,
                        "name": "toAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10035,
                        "src": "1803:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1274",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 10172,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1812:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1812:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10175,
                            "name": "fromDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10037,
                            "src": "1839:12:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 10176,
                            "name": "toDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10039,
                            "src": "1853:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 10177,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10152,
                            "src": "1865:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 10174,
                          "name": "adjustDecimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10224,
                          "src": "1824:14:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 10178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1824:49:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1274",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10168,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1523,
                        "src": "1780:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1523_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 10170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1330,
                      "src": "1780:22:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1274_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 10179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1780:94:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10180,
                  "nodeType": "ExpressionStatement",
                  "src": "1780:94:60"
                }
              ]
            },
            "functionSelector": "454b0608",
            "id": 10182,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrate",
            "nameLocation": "1599:7:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10152,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1612:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10182,
                  "src": "1607:12:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10151,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1607:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1606:14:60"
            },
            "returnParameters": {
              "id": 10154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1630:0:60"
            },
            "scope": 10225,
            "src": "1590:291:60",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10223,
              "nodeType": "Block",
              "src": "1992:253:60",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10193,
                      "name": "_fromDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10184,
                      "src": "2006:13:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 10194,
                      "name": "_toDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10186,
                      "src": "2022:11:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2006:27:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 10206,
                        "name": "_fromDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10184,
                        "src": "2115:13:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 10207,
                        "name": "_toDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10186,
                        "src": "2131:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2115:27:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 10219,
                    "nodeType": "IfStatement",
                    "src": "2111:104:60",
                    "trueBody": {
                      "id": 10218,
                      "nodeType": "Block",
                      "src": "2144:71:60",
                      "statements": [
                        {
                          "expression": {
                            "id": 10216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 10209,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10188,
                              "src": "2158:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "*=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 10215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 10210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2169:2:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 10213,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 10211,
                                      "name": "_toDecimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10186,
                                      "src": "2176:11:60",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 10212,
                                      "name": "_fromDecimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10184,
                                      "src": "2190:13:60",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "2176:27:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 10214,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2175:29:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2169:35:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2158:46:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 10217,
                          "nodeType": "ExpressionStatement",
                          "src": "2158:46:60"
                        }
                      ]
                    }
                  },
                  "id": 10220,
                  "nodeType": "IfStatement",
                  "src": "2002:213:60",
                  "trueBody": {
                    "id": 10205,
                    "nodeType": "Block",
                    "src": "2034:71:60",
                    "statements": [
                      {
                        "expression": {
                          "id": 10203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10196,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10188,
                            "src": "2048:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "/=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 10202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 10197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2059:2:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 10200,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 10198,
                                    "name": "_fromDecimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10184,
                                    "src": "2066:13:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 10199,
                                    "name": "_toDecimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10186,
                                    "src": "2082:11:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2066:27:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 10201,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2065:29:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2059:35:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2048:46:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10204,
                        "nodeType": "ExpressionStatement",
                        "src": "2048:46:60"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 10221,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10188,
                    "src": "2231:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10192,
                  "id": 10222,
                  "nodeType": "Return",
                  "src": "2224:14:60"
                }
              ]
            },
            "id": 10224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "adjustDecimals",
            "nameLocation": "1896:14:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10184,
                  "mutability": "mutable",
                  "name": "_fromDecimals",
                  "nameLocation": "1916:13:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10224,
                  "src": "1911:18:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10183,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1911:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10186,
                  "mutability": "mutable",
                  "name": "_toDecimals",
                  "nameLocation": "1936:11:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10224,
                  "src": "1931:16:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10185,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1931:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10188,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1954:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 10224,
                  "src": "1949:12:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10187,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1949:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1910:52:60"
            },
            "returnParameters": {
              "id": 10192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10191,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10224,
                  "src": "1986:4:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10190,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1986:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1985:6:60"
            },
            "scope": 10225,
            "src": "1887:358:60",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 10226,
        "src": "246:2001:60",
        "usedErrors": []
      }
    ],
    "src": "64:2184:60"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2022-01-26T09:33:50.611Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}