{
  "contractName": "AddressForKip7",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/bridge/kip7/utils/Address.sol\":\"AddressForKip7\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/bridge/kip7/utils/Address.sol\":{\"keccak256\":\"0xdf9e8ad10e1c14a070e62283542feb40501e43f82eddbdf04a54ae045f0dac07\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b8949f4041a7713cc09be4189a3aa4b9d4e845ca98e94671bfc5aa6d963d5c25\",\"dweb:/ipfs/QmR9M2RQcnk9zv5vSGHCEHfDWYiDzVjCs6YxTvushqDYp6\"]}},\"version\":1}",
  "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c2afb58cdb6ca5f77574d4f28a2762067add45fc6cfe57b2bbabf7192276252d64736f6c63430008040033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c2afb58cdb6ca5f77574d4f28a2762067add45fc6cfe57b2bbabf7192276252d64736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "132:978:52:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;132:978:52;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "132:978:52:-:0;;;;;;;;",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressForKip7 {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n}\n",
  "sourcePath": "/Users/nguyenthithuthao/Downloads/Documents/wormhole-kip7/contracts/bridge/kip7/utils/Address.sol",
  "ast": {
    "absolutePath": "project:/contracts/bridge/kip7/utils/Address.sol",
    "exportedSymbols": {
      "AddressForKip7": [
        8367
      ]
    },
    "id": 8368,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8348,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:52"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 8349,
          "nodeType": "StructuredDocumentation",
          "src": "64:67:52",
          "text": " @dev Collection of functions related to the address type"
        },
        "fullyImplemented": true,
        "id": 8367,
        "linearizedBaseContracts": [
          8367
        ],
        "name": "AddressForKip7",
        "nameLocation": "140:14:52",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8365,
              "nodeType": "Block",
              "src": "797:311:52",
              "statements": [
                {
                  "assignments": [
                    8358
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8358,
                      "mutability": "mutable",
                      "name": "size",
                      "nameLocation": "1002:4:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 8365,
                      "src": "994:12:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8357,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "994:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8359,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "994:12:52"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1025:52:52",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1039:28:52",
                        "value": {
                          "arguments": [
                            {
                              "name": "account",
                              "nodeType": "YulIdentifier",
                              "src": "1059:7:52"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "1047:11:52"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1047:20:52"
                        },
                        "variableNames": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "1039:4:52"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 8352,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1059:7:52",
                      "valueSize": 1
                    },
                    {
                      "declaration": 8358,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1039:4:52",
                      "valueSize": 1
                    }
                  ],
                  "id": 8360,
                  "nodeType": "InlineAssembly",
                  "src": "1016:61:52"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8361,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8358,
                      "src": "1093:4:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 8362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1100:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1093:8:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8356,
                  "id": 8364,
                  "nodeType": "Return",
                  "src": "1086:15:52"
                }
              ]
            },
            "documentation": {
              "id": 8350,
              "nodeType": "StructuredDocumentation",
              "src": "161:565:52",
              "text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
            },
            "id": 8366,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nameLocation": "740:10:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8352,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "759:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8366,
                  "src": "751:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "751:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "750:17:52"
            },
            "returnParameters": {
              "id": 8356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8355,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8366,
                  "src": "791:4:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8354,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "791:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "790:6:52"
            },
            "scope": 8367,
            "src": "731:377:52",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 8368,
        "src": "132:978:52",
        "usedErrors": []
      }
    ],
    "src": "39:1072:52"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/bridge/kip7/utils/Address.sol",
    "exportedSymbols": {
      "AddressForKip7": [
        8367
      ]
    },
    "id": 8368,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8348,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:52"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 8349,
          "nodeType": "StructuredDocumentation",
          "src": "64:67:52",
          "text": " @dev Collection of functions related to the address type"
        },
        "fullyImplemented": true,
        "id": 8367,
        "linearizedBaseContracts": [
          8367
        ],
        "name": "AddressForKip7",
        "nameLocation": "140:14:52",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8365,
              "nodeType": "Block",
              "src": "797:311:52",
              "statements": [
                {
                  "assignments": [
                    8358
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8358,
                      "mutability": "mutable",
                      "name": "size",
                      "nameLocation": "1002:4:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 8365,
                      "src": "994:12:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8357,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "994:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8359,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "994:12:52"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1025:52:52",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1039:28:52",
                        "value": {
                          "arguments": [
                            {
                              "name": "account",
                              "nodeType": "YulIdentifier",
                              "src": "1059:7:52"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "1047:11:52"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1047:20:52"
                        },
                        "variableNames": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "1039:4:52"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 8352,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1059:7:52",
                      "valueSize": 1
                    },
                    {
                      "declaration": 8358,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1039:4:52",
                      "valueSize": 1
                    }
                  ],
                  "id": 8360,
                  "nodeType": "InlineAssembly",
                  "src": "1016:61:52"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8361,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8358,
                      "src": "1093:4:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 8362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1100:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1093:8:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8356,
                  "id": 8364,
                  "nodeType": "Return",
                  "src": "1086:15:52"
                }
              ]
            },
            "documentation": {
              "id": 8350,
              "nodeType": "StructuredDocumentation",
              "src": "161:565:52",
              "text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
            },
            "id": 8366,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nameLocation": "740:10:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8352,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "759:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8366,
                  "src": "751:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "751:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "750:17:52"
            },
            "returnParameters": {
              "id": 8356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8355,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8366,
                  "src": "791:4:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8354,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "791:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "790:6:52"
            },
            "scope": 8367,
            "src": "731:377:52",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 8368,
        "src": "132:978:52",
        "usedErrors": []
      }
    ],
    "src": "39:1072:52"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2022-01-26T09:33:50.546Z",
  "devdoc": {
    "details": "Collection of functions related to the address type",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}