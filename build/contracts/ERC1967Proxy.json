{
  "contractName": "ERC1967Proxy",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_logic",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0x6309f9f39dc6f4f45a24f296543867aa358e32946cd6b2874627a996d606b3a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f5abfc32db1d44fd3d38d902879eaeaad827781bb9f954d3ccb8639c55db3c0\",\"dweb:/ipfs/QmVSkxFgWphaUx6w9XdvgwJJuxABdpuVQEbABbRmzd3XFc\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x5f4c3eed093dfb0e4e20c1c102d2f2c6894a972f454adb308511a0afb37e6f79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://833509a221a8d8dace9e028ac40e95c941b4c91b5dcbe921988578c48dc72e81\",\"dweb:/ipfs/QmX3V2Uk7VU9ARiKHLFGQW5RL6sZS74TrjpSuSPkyRgK2D\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xab2556b154ceb1a11e456f2827ca8f6f65242b1b2fcc00268ab6d38fc6e64bbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5823895b53df825121a25dd11a73eb4595c24d20a11c5013e6dda6fd0cd53463\",\"dweb:/ipfs/QmbD8ozmp9DHQ8Es4ZRUKYz8KZSGnwBnVyHmJ9Yf7rYSoZ\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xfe1b7a9aa2a530a9e705b220e26cd584e2fbdc9602a3a1066032b12816b46aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbaba7fe0fe556cc5ed291e03d271fd27d395250141ecfb57a4b30d528958ff9\",\"dweb:/ipfs/QmWT653X2DyZo8nqEcmFe3yTkrCJv3ptbZLhbgLU3y6abe\"]}},\"version\":1}",
  "bytecode": "0x608060405260405161077e38038061077e83398101604081905261002291610303565b61004d60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd61041b565b6000805160206107378339815191521461007757634e487b7160e01b600052600160045260246000fd5b6100838282600061008a565b5050610480565b610093836100c0565b6000825111806100a05750805b156100bb576100b9838361010060201b6100291760201c565b505b505050565b6100c98161012c565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606101258383604051806060016040528060278152602001610757602791396101ec565b9392505050565b61013f816102c160201b6100551760201c565b6101a65760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101cb60008051602061073783398151915260001b6102c760201b61005b1760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060833b61024b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161019d565b600080856001600160a01b03168560405161026691906103cc565b600060405180830381855af49150503d80600081146102a1576040519150601f19603f3d011682016040523d82523d6000602084013e6102a6565b606091505b5090925090506102b78282866102ca565b9695505050505050565b3b151590565b90565b606083156102d9575081610125565b8251156102e95782518084602001fd5b8160405162461bcd60e51b815260040161019d91906103e8565b60008060408385031215610315578182fd5b82516001600160a01b038116811461032b578283fd5b60208401519092506001600160401b0380821115610347578283fd5b818501915085601f83011261035a578283fd5b81518181111561036c5761036c61046a565b604051601f8201601f19908116603f011681019083821181831017156103945761039461046a565b816040528281528860208487010111156103ac578586fd5b6103bd83602083016020880161043e565b80955050505050509250929050565b600082516103de81846020870161043e565b9190910192915050565b602081526000825180602084015261040781604085016020870161043e565b601f01601f19169190910160400192915050565b60008282101561043957634e487b7160e01b81526011600452602481fd5b500390565b60005b83811015610459578181015183820152602001610441565b838111156100b95750506000910152565b634e487b7160e01b600052604160045260246000fd5b6102a88061048f6000396000f3fe60806040523661001357610011610017565b005b6100115b61002761002261005e565b610096565b565b606061004e838360405180606001604052806027815260200161024c602791396100ba565b9392505050565b3b151590565b90565b60006100917f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156100b5573d6000f35b3d6000fd5b6060833b61011e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161013991906101cc565b600060405180830381855af49150503d8060008114610174576040519150601f19603f3d011682016040523d82523d6000602084013e610179565b606091505b5091509150610189828286610193565b9695505050505050565b606083156101a257508161004e565b8251156101b25782518084602001fd5b8160405162461bcd60e51b815260040161011591906101e8565b600082516101de81846020870161021b565b9190910192915050565b602081526000825180602084015261020781604085016020870161021b565b601f01601f19169190910160400192915050565b60005b8381101561023657818101518382015260200161021e565b83811115610245576000848401525b5050505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220e81a0599646281ed22237c6e1a71af27aae7c9778a3595bc0dc875135584b7d564736f6c63430008040033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
  "deployedBytecode": "0x60806040523661001357610011610017565b005b6100115b61002761002261005e565b610096565b565b606061004e838360405180606001604052806027815260200161024c602791396100ba565b9392505050565b3b151590565b90565b60006100917f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156100b5573d6000f35b3d6000fd5b6060833b61011e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161013991906101cc565b600060405180830381855af49150503d8060008114610174576040519150601f19603f3d011682016040523d82523d6000602084013e610179565b606091505b5091509150610189828286610193565b9695505050505050565b606083156101a257508161004e565b8251156101b25782518084602001fd5b8160405162461bcd60e51b815260040161011591906101e8565b600082516101de81846020870161021b565b9190910192915050565b602081526000825180602084015261020781604085016020870161021b565b601f01601f19169190910160400192915050565b60005b8381101561023657818101518382015260200161021e565b83811115610245576000848401525b5050505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220e81a0599646281ed22237c6e1a71af27aae7c9778a3595bc0dc875135584b7d564736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3232:88",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:88",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "121:993:88",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:26:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "176:6:88"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "184:6:88"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:22:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:22:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "142:7:88"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "151:9:88"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "138:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "138:23:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "163:2:88",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "134:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "134:32:88"
                  },
                  "nodeType": "YulIf",
                  "src": "131:2:88"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "202:29:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "221:9:88"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "215:5:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "215:16:88"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "206:5:88",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "294:26:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "303:6:88"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "311:6:88"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "296:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "296:22:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "296:22:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "253:5:88"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "264:5:88"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "279:3:88",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "284:1:88",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "275:3:88"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "275:11:88"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "288:1:88",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "271:3:88"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "271:19:88"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "260:3:88"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "260:31:88"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "250:2:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "250:42:88"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "243:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "243:50:88"
                  },
                  "nodeType": "YulIf",
                  "src": "240:2:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "329:15:88",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "339:5:88"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "329:6:88"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "353:39:88",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "377:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "388:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "373:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "373:18:88"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "367:5:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "367:25:88"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "357:6:88",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "401:28:88",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "419:2:88",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "423:1:88",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "415:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "415:10:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "427:1:88",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "411:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "411:18:88"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "405:2:88",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "456:26:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "465:6:88"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "473:6:88"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "458:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "458:22:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "458:22:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "444:6:88"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "452:2:88"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "441:2:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "441:14:88"
                  },
                  "nodeType": "YulIf",
                  "src": "438:2:88"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "491:32:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "505:9:88"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "516:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "501:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "501:22:88"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "495:2:88",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "571:26:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "580:6:88"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "588:6:88"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "573:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "573:22:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "573:22:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "550:2:88"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "554:4:88",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "546:3:88"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "546:13:88"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "561:7:88"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "542:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "542:27:88"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "535:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "535:35:88"
                  },
                  "nodeType": "YulIf",
                  "src": "532:2:88"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "606:19:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "622:2:88"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "616:5:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:9:88"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "610:2:88",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "648:22:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "650:16:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "650:18:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "650:18:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "640:2:88"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "644:2:88"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "637:2:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "637:10:88"
                  },
                  "nodeType": "YulIf",
                  "src": "634:2:88"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "679:17:88",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "693:2:88",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "689:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "689:7:88"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "683:2:88",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "705:23:88",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "725:2:88",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "719:5:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "719:9:88"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "709:6:88",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "737:71:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "759:6:88"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "783:2:88"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "787:4:88",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "779:3:88"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "779:13:88"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "794:2:88"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "775:3:88"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "775:22:88"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "799:2:88",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "771:3:88"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "771:31:88"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "804:2:88"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "767:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "767:40:88"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "755:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "755:53:88"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "741:10:88",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "867:22:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "869:16:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "869:18:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "869:18:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "826:10:88"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "838:2:88"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "823:2:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "823:18:88"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "846:10:88"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "858:6:88"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "843:2:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "843:22:88"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "820:2:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "820:46:88"
                  },
                  "nodeType": "YulIf",
                  "src": "817:2:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "905:2:88",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "909:10:88"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "898:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "898:22:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "898:22:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "936:6:88"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "944:2:88"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "929:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "929:18:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "929:18:88"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "993:26:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1002:6:88"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1010:6:88"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "995:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "995:22:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "995:22:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "970:2:88"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "974:2:88"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "966:3:88"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "966:11:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "979:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "962:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "962:20:88"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "984:7:88"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "959:2:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "959:33:88"
                  },
                  "nodeType": "YulIf",
                  "src": "956:2:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1054:2:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1058:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1050:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1050:11:88"
                      },
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1067:6:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1075:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1063:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1063:15:88"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1080:2:88"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1028:21:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1028:55:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1028:55:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1092:16:88",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1102:6:88"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1092:6:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "79:9:88",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "90:7:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "102:6:88",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "110:6:88",
                "type": ""
              }
            ],
            "src": "14:1100:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1256:137:88",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1266:27:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1286:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1280:5:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1280:13:88"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1270:6:88",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1328:6:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1336:4:88",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1324:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1324:17:88"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1343:3:88"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1348:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1302:21:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1302:53:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1302:53:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1364:23:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1375:3:88"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1380:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1371:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1371:16:88"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1364:3:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1232:3:88",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1237:6:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1248:3:88",
                "type": ""
              }
            ],
            "src": "1119:274:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1519:262:88",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1536:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1547:2:88",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1529:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1529:21:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1529:21:88"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1559:27:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1579:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1573:5:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1573:13:88"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1563:6:88",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1606:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1617:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1602:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1602:18:88"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1622:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1595:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1595:34:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1595:34:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1664:6:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1672:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1660:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1660:15:88"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1681:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1692:2:88",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1677:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1677:18:88"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1697:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1638:21:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1638:66:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1638:66:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1713:62:88",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1729:9:88"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1748:6:88"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1756:2:88",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1744:3:88"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1744:15:88"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1765:2:88",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1761:3:88"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1761:7:88"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1740:3:88"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1740:29:88"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1725:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1725:45:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1772:2:88",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1721:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1721:54:88"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1713:4:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1488:9:88",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1499:6:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1510:4:88",
                "type": ""
              }
            ],
            "src": "1398:383:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1960:235:88",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1977:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1988:2:88",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1970:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1970:21:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1970:21:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2011:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2022:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2007:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2007:18:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2027:2:88",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2000:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2000:30:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2000:30:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2050:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2061:2:88",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2046:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2046:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2066:34:88",
                        "type": "",
                        "value": "ERC1967: new implementation is n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2039:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2039:62:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2039:62:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2121:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2132:2:88",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2117:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2117:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2137:15:88",
                        "type": "",
                        "value": "ot a contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2110:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2110:43:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2110:43:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2162:27:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2174:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2185:3:88",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2170:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2170:19:88"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2162:4:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1937:9:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1951:4:88",
                "type": ""
              }
            ],
            "src": "1786:409:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2374:228:88",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2391:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2402:2:88",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2384:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2384:21:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2384:21:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2425:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2436:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2421:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2421:18:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2441:2:88",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2414:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2414:30:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2414:30:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2464:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2475:2:88",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2460:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2460:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2480:34:88",
                        "type": "",
                        "value": "Address: delegate call to non-co"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2453:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2453:62:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2453:62:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2535:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2546:2:88",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2531:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2531:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2551:8:88",
                        "type": "",
                        "value": "ntract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2524:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2524:36:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2524:36:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2569:27:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2581:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2592:3:88",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2577:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2577:19:88"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2569:4:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2351:9:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2365:4:88",
                "type": ""
              }
            ],
            "src": "2200:402:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2656:179:88",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2686:117:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "diff",
                              "nodeType": "YulIdentifier",
                              "src": "2707:4:88"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2717:3:88",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2722:10:88",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2713:3:88"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2713:20:88"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2700:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2700:34:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2700:34:88"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2754:1:88",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2757:4:88",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2747:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2747:15:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2747:15:88"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "diff",
                              "nodeType": "YulIdentifier",
                              "src": "2782:4:88"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2788:4:88",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2775:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2775:18:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2775:18:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2672:1:88"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2675:1:88"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2669:2:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2669:8:88"
                  },
                  "nodeType": "YulIf",
                  "src": "2666:2:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2812:17:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2824:1:88"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2827:1:88"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2820:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2820:9:88"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "2812:4:88"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2638:1:88",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2641:1:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "2647:4:88",
                "type": ""
              }
            ],
            "src": "2607:228:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2893:205:88",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2903:10:88",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2912:1:88",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2907:1:88",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2972:63:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2997:3:88"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "3002:1:88"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2993:3:88"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2993:11:88"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "3016:3:88"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "3021:1:88"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3012:3:88"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3012:11:88"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3006:5:88"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3006:18:88"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2986:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2986:39:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2986:39:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2933:1:88"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2936:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2930:2:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2930:13:88"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2944:19:88",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2946:15:88",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2955:1:88"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2958:2:88",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2951:3:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2951:10:88"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2946:1:88"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2926:3:88",
                    "statements": []
                  },
                  "src": "2922:113:88"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3061:31:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3074:3:88"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "3079:6:88"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3070:3:88"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3070:16:88"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3088:1:88",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3063:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3063:27:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3063:27:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3050:1:88"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3053:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3047:2:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3047:13:88"
                  },
                  "nodeType": "YulIf",
                  "src": "3044:2:88"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "2871:3:88",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "2876:3:88",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2881:6:88",
                "type": ""
              }
            ],
            "src": "2840:258:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3135:95:88",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3152:1:88",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3159:3:88",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3164:10:88",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3155:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3155:20:88"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3145:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3145:31:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3145:31:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3192:1:88",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3195:4:88",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3185:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3185:15:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3185:15:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3216:1:88",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3219:4:88",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3209:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3209:15:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3209:15:88"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "3103:127:88"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n        let offset := mload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value1, value1) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value1, value1) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(value1, value1) }\n        copy_memory_to_memory(add(_2, 32), add(memPtr, 32), _3)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(diff, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(diff, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 88,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1348:88",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:88",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "151:137:88",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "161:27:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "181:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "175:5:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "175:13:88"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "165:6:88",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "223:6:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "231:4:88",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "219:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "219:17:88"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "238:3:88"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "243:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "197:21:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "197:53:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "197:53:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "259:23:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "270:3:88"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "275:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "266:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "266:16:88"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "259:3:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "127:3:88",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "132:6:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "143:3:88",
                "type": ""
              }
            ],
            "src": "14:274:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "414:262:88",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "431:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "442:2:88",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "424:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "424:21:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "424:21:88"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "454:27:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "474:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "468:5:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "468:13:88"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "458:6:88",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "501:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "512:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "497:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "497:18:88"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "517:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "490:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "490:34:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "490:34:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "559:6:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "567:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "555:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "555:15:88"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "576:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "587:2:88",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "572:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "572:18:88"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "592:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "533:21:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "533:66:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "533:66:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "608:62:88",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "624:9:88"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "643:6:88"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "651:2:88",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "639:3:88"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "639:15:88"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "660:2:88",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "656:3:88"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "656:7:88"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "635:3:88"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "635:29:88"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "620:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "620:45:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "667:2:88",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "616:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:54:88"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "608:4:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "383:9:88",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "394:6:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "405:4:88",
                "type": ""
              }
            ],
            "src": "293:383:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "855:228:88",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "872:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "883:2:88",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "865:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "865:21:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "865:21:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "906:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "917:2:88",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "902:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "902:18:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "922:2:88",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "895:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "895:30:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "895:30:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "945:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "956:2:88",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "941:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "941:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "961:34:88",
                        "type": "",
                        "value": "Address: delegate call to non-co"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "934:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "934:62:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "934:62:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1016:9:88"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1027:2:88",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1012:3:88"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1012:18:88"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1032:8:88",
                        "type": "",
                        "value": "ntract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1005:6:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1005:36:88"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1005:36:88"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1050:27:88",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1062:9:88"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1073:3:88",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1058:3:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1058:19:88"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1050:4:88"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "832:9:88",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "846:4:88",
                "type": ""
              }
            ],
            "src": "681:402:88"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1141:205:88",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1151:10:88",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1160:1:88",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1155:1:88",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1220:63:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "1245:3:88"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "1250:1:88"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1241:3:88"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1241:11:88"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "1264:3:88"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "1269:1:88"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1260:3:88"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1260:11:88"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1254:5:88"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1254:18:88"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1234:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1234:39:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1234:39:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1181:1:88"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1184:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1178:2:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1178:13:88"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1192:19:88",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1194:15:88",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1203:1:88"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1206:2:88",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1199:3:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1199:10:88"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1194:1:88"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1174:3:88",
                    "statements": []
                  },
                  "src": "1170:113:88"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1309:31:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "1322:3:88"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "1327:6:88"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1318:3:88"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1318:16:88"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1336:1:88",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1311:6:88"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1311:27:88"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1311:27:88"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1298:1:88"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1301:6:88"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1295:2:88"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1295:13:88"
                  },
                  "nodeType": "YulIf",
                  "src": "1292:2:88"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "1119:3:88",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "1124:3:88",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1129:6:88",
                "type": ""
              }
            ],
            "src": "1088:258:88"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n}",
      "id": 88,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "552:830:1:-:0;;;945:217;;;;;;;;;;;;;;;;;;:::i;:::-;1050:54;1103:1;1058:41;1050:54;:::i;:::-;-1:-1:-1;;;;;;;;;;;1018:87:1;1011:95;;-1:-1:-1;;;1011:95:1;;;;;;;;;1116:39;1134:6;1142:5;1149;1116:17;:39::i;:::-;945:217;;552:830;;2122:295:2;2260:29;2271:17;2260:10;:29::i;:::-;2317:1;2303:4;:11;:15;:28;;;;2322:9;2303:28;2299:112;;;2347:53;2376:17;2395:4;2347:28;;;;;:53;;:::i;:::-;;2299:112;2122:295;;;:::o;1836:152::-;1902:37;1921:17;1902:18;:37::i;:::-;1954:27;;-1:-1:-1;;;;;1954:27:2;;;;;;;;1836:152;:::o;6223:198:13:-;6306:12;6337:77;6358:6;6366:4;6337:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6330:84;6223:198;-1:-1:-1;;;6223:198:13:o;1471:259:2:-;1552:37;1571:17;1552:18;;;;;:37;;:::i;:::-;1544:95;;;;-1:-1:-1;;;1544:95:2;;1988:2:88;1544:95:2;;;1970:21:88;2027:2;2007:18;;;2000:30;2066:34;2046:18;;;2039:62;-1:-1:-1;;;2117:18:88;;;2110:43;2170:19;;1544:95:2;;;;;;;;;1706:17;1649:48;-1:-1:-1;;;;;;;;;;;1676:20:2;;1649:26;;;;;:48;;:::i;:::-;:74;;-1:-1:-1;;;;;;1649:74:2;-1:-1:-1;;;;;1649:74:2;;;;;;;;;;-1:-1:-1;1471:259:2:o;6607:387:13:-;6748:12;1087:20;;6772:69;;;;-1:-1:-1;;;6772:69:13;;2402:2:88;6772:69:13;;;2384:21:88;2441:2;2421:18;;;2414:30;2480:34;2460:18;;;2453:62;-1:-1:-1;;;2531:18:88;;;2524:36;2577:19;;6772:69:13;2374:228:88;6772:69:13;6853:12;6867:23;6894:6;-1:-1:-1;;;;;6894:19:13;6914:4;6894:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6852:67:13;;-1:-1:-1;6852:67:13;-1:-1:-1;6936:51:13;6852:67;;6974:12;6936:16;:51::i;:::-;6929:58;6607:387;-1:-1:-1;;;;;;6607:387:13:o;771:377::-;1087:20;1133:8;;;771:377::o;1599:147:15:-;1726:4;1702:38::o;7214:692:13:-;7360:12;7388:7;7384:516;;;-1:-1:-1;7418:10:13;7411:17;;7384:516;7529:17;;:21;7525:365;;7723:10;7717:17;7783:15;7770:10;7766:2;7762:19;7755:44;7672:145;7862:12;7855:20;;-1:-1:-1;;;7855:20:13;;;;;;;;:::i;14:1100:88:-;102:6;110;163:2;151:9;142:7;138:23;134:32;131:2;;;184:6;176;169:22;131:2;215:16;;-1:-1:-1;;;;;260:31:88;;250:42;;240:2;;311:6;303;296:22;240:2;388;373:18;;367:25;339:5;;-1:-1:-1;;;;;;441:14:88;;;438:2;;;473:6;465;458:22;438:2;516:6;505:9;501:22;491:32;;561:7;554:4;550:2;546:13;542:27;532:2;;588:6;580;573:22;532:2;622;616:9;644:2;640;637:10;634:2;;;650:18;;:::i;:::-;725:2;719:9;693:2;779:13;;-1:-1:-1;;775:22:88;;;799:2;771:31;767:40;755:53;;;823:18;;;843:22;;;820:46;817:2;;;869:18;;:::i;:::-;909:10;905:2;898:22;944:2;936:6;929:18;984:7;979:2;974;970;966:11;962:20;959:33;956:2;;;1010:6;1002;995:22;956:2;1028:55;1080:2;1075;1067:6;1063:15;1058:2;1054;1050:11;1028:55;:::i;:::-;1102:6;1092:16;;;;;;;121:993;;;;;:::o;1119:274::-;1248:3;1286:6;1280:13;1302:53;1348:6;1343:3;1336:4;1328:6;1324:17;1302:53;:::i;:::-;1371:16;;;;;1256:137;-1:-1:-1;;1256:137:88:o;1398:383::-;1547:2;1536:9;1529:21;1510:4;1579:6;1573:13;1622:6;1617:2;1606:9;1602:18;1595:34;1638:66;1697:6;1692:2;1681:9;1677:18;1672:2;1664:6;1660:15;1638:66;:::i;:::-;1765:2;1744:15;-1:-1:-1;;1740:29:88;1725:45;;;;1772:2;1721:54;;1519:262;-1:-1:-1;;1519:262:88:o;2607:228::-;2647:4;2675:1;2672;2669:8;2666:2;;;-1:-1:-1;;;2700:34:88;;2757:4;2754:1;2747:15;2788:4;2707;2775:18;2666:2;-1:-1:-1;2820:9:88;;2656:179::o;2840:258::-;2912:1;2922:113;2936:6;2933:1;2930:13;2922:113;;;3012:11;;;3006:18;2993:11;;;2986:39;2958:2;2951:10;2922:113;;;3053:6;3050:1;3047:13;3044:2;;;-1:-1:-1;;3088:1:88;3070:16;;3063:27;2893:205::o;3103:127::-;3164:10;3159:3;3155:20;3152:1;3145:31;3195:4;3192:1;3185:15;3219:4;3216:1;3209:15;3135:95;552:830:1;;;;;;",
  "deployedSourceMap": "552:830:1:-:0;;;;;;2884:11:3;:9;:11::i;:::-;552:830:1;;2661:11:3;2308:110;2383:28;2393:17;:15;:17::i;:::-;2383:9;:28::i;:::-;2308:110::o;6223:198:13:-;6306:12;6337:77;6358:6;6366:4;6337:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6330:84;6223:198;-1:-1:-1;;;6223:198:13:o;771:377::-;1087:20;1133:8;;;771:377::o;1599:147:15:-;1726:4;1702:38::o;1240:140:1:-;1307:12;1338:35;969:66:2;1319:54;-1:-1:-1;;;;;1319:54:2;;1240:140;1338:35:1;1331:42;;1240:140;:::o;934:895:3:-;1272:14;1269:1;1266;1253:34;1486:1;1483;1467:14;1464:1;1448:14;1441:5;1428:60;1562:16;1559:1;1556;1541:38;1600:6;1667:66;;;;1782:16;1779:1;1772:27;1667:66;1702:16;1699:1;1692:27;6607:387:13;6748:12;1087:20;;6772:69;;;;-1:-1:-1;;;6772:69:13;;883:2:88;6772:69:13;;;865:21:88;922:2;902:18;;;895:30;961:34;941:18;;;934:62;-1:-1:-1;;;1012:18:88;;;1005:36;1058:19;;6772:69:13;;;;;;;;;6853:12;6867:23;6894:6;-1:-1:-1;;;;;6894:19:13;6914:4;6894:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6852:67;;;;6936:51;6953:7;6962:10;6974:12;6936:16;:51::i;:::-;6929:58;6607:387;-1:-1:-1;;;;;;6607:387:13:o;7214:692::-;7360:12;7388:7;7384:516;;;-1:-1:-1;7418:10:13;7411:17;;7384:516;7529:17;;:21;7525:365;;7723:10;7717:17;7783:15;7770:10;7766:2;7762:19;7755:44;7672:145;7862:12;7855:20;;-1:-1:-1;;;7855:20:13;;;;;;;;:::i;14:274:88:-;143:3;181:6;175:13;197:53;243:6;238:3;231:4;223:6;219:17;197:53;:::i;:::-;266:16;;;;;151:137;-1:-1:-1;;151:137:88:o;293:383::-;442:2;431:9;424:21;405:4;474:6;468:13;517:6;512:2;501:9;497:18;490:34;533:66;592:6;587:2;576:9;572:18;567:2;559:6;555:15;533:66;:::i;:::-;660:2;639:15;-1:-1:-1;;635:29:88;620:45;;;;667:2;616:54;;414:262;-1:-1:-1;;414:262:88:o;1088:258::-;1160:1;1170:113;1184:6;1181:1;1178:13;1170:113;;;1260:11;;;1254:18;1241:11;;;1234:39;1206:2;1199:10;1170:113;;;1301:6;1298:1;1295:13;1292:2;;;1336:1;1327:6;1322:3;1318:16;1311:27;1292:2;;1141:205;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/ERC1967/ERC1967Proxy.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Proxy.sol\";\nimport \"./ERC1967Upgrade.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n */\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n     *\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n     * function call, and allows initializating the storage of the proxy like a Solidity constructor.\n     */\n    constructor(address _logic, bytes memory _data) payable {\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1));\n        _upgradeToAndCall(_logic, _data, false);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _implementation() internal view virtual override returns (address impl) {\n        return ERC1967Upgrade._getImplementation();\n    }\n}\n",
  "sourcePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
    "exportedSymbols": {
      "Address": [
        1981
      ],
      "ERC1967Proxy": [
        157
      ],
      "ERC1967Upgrade": [
        506
      ],
      "IBeacon": [
        650
      ],
      "Proxy": [
        558
      ],
      "StorageSlot": [
        2063
      ]
    },
    "id": 158,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 106,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "99:23:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
        "file": "../Proxy.sol",
        "id": 107,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 158,
        "sourceUnit": 559,
        "src": "124:22:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "file": "./ERC1967Upgrade.sol",
        "id": 108,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 158,
        "sourceUnit": 507,
        "src": "147:30:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 110,
              "name": "Proxy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 558,
              "src": "577:5:1"
            },
            "id": 111,
            "nodeType": "InheritanceSpecifier",
            "src": "577:5:1"
          },
          {
            "baseName": {
              "id": 112,
              "name": "ERC1967Upgrade",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 506,
              "src": "584:14:1"
            },
            "id": 113,
            "nodeType": "InheritanceSpecifier",
            "src": "584:14:1"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 109,
          "nodeType": "StructuredDocumentation",
          "src": "179:372:1",
          "text": " @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy."
        },
        "fullyImplemented": true,
        "id": 157,
        "linearizedBaseContracts": [
          157,
          506,
          558
        ],
        "name": "ERC1967Proxy",
        "nameLocation": "561:12:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 143,
              "nodeType": "Block",
              "src": "1001:161:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 122,
                          "name": "_IMPLEMENTATION_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 170,
                          "src": "1018:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "656970313936372e70726f78792e696d706c656d656e746174696f6e",
                                        "id": 128,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1068:30:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
                                          "typeString": "literal_string \"eip1967.proxy.implementation\""
                                        },
                                        "value": "eip1967.proxy.implementation"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
                                          "typeString": "literal_string \"eip1967.proxy.implementation\""
                                        }
                                      ],
                                      "id": 127,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967288,
                                      "src": "1058:9:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 129,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1058:41:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 126,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1050:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 125,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1050:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 130,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1050:50:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 131,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1103:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1050:54:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1042:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 123,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1042:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1042:63:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1018:87:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 121,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "1011:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1011:95:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1011:95:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 138,
                        "name": "_logic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "1134:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 139,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "1142:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1149:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 137,
                      "name": "_upgradeToAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 257,
                      "src": "1116:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1116:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "1116:39:1"
                }
              ]
            },
            "documentation": {
              "id": 114,
              "nodeType": "StructuredDocumentation",
              "src": "605:335:1",
              "text": " @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n function call, and allows initializating the storage of the proxy like a Solidity constructor."
            },
            "id": 144,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "_logic",
                  "nameLocation": "965:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "957:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "957:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "986:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "973:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "973:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "956:36:1"
            },
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1001:0:1"
            },
            "scope": 157,
            "src": "945:217:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              523
            ],
            "body": {
              "id": 155,
              "nodeType": "Block",
              "src": "1321:59:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 151,
                        "name": "ERC1967Upgrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 506,
                        "src": "1338:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC1967Upgrade_$506_$",
                          "typeString": "type(contract ERC1967Upgrade)"
                        }
                      },
                      "id": 152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_getImplementation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 188,
                      "src": "1338:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1338:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 150,
                  "id": 154,
                  "nodeType": "Return",
                  "src": "1331:42:1"
                }
              ]
            },
            "documentation": {
              "id": 145,
              "nodeType": "StructuredDocumentation",
              "src": "1168:67:1",
              "text": " @dev Returns the current implementation address."
            },
            "id": 156,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_implementation",
            "nameLocation": "1249:15:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 147,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1289:8:1"
            },
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1264:2:1"
            },
            "returnParameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "mutability": "mutable",
                  "name": "impl",
                  "nameLocation": "1315:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "1307:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1307:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1306:14:1"
            },
            "scope": 157,
            "src": "1240:140:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 158,
        "src": "552:830:1",
        "usedErrors": []
      }
    ],
    "src": "99:1284:1"
  },
  "legacyAST": {
    "absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
    "exportedSymbols": {
      "Address": [
        1981
      ],
      "ERC1967Proxy": [
        157
      ],
      "ERC1967Upgrade": [
        506
      ],
      "IBeacon": [
        650
      ],
      "Proxy": [
        558
      ],
      "StorageSlot": [
        2063
      ]
    },
    "id": 158,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 106,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "99:23:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
        "file": "../Proxy.sol",
        "id": 107,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 158,
        "sourceUnit": 559,
        "src": "124:22:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "file": "./ERC1967Upgrade.sol",
        "id": 108,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 158,
        "sourceUnit": 507,
        "src": "147:30:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 110,
              "name": "Proxy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 558,
              "src": "577:5:1"
            },
            "id": 111,
            "nodeType": "InheritanceSpecifier",
            "src": "577:5:1"
          },
          {
            "baseName": {
              "id": 112,
              "name": "ERC1967Upgrade",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 506,
              "src": "584:14:1"
            },
            "id": 113,
            "nodeType": "InheritanceSpecifier",
            "src": "584:14:1"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 109,
          "nodeType": "StructuredDocumentation",
          "src": "179:372:1",
          "text": " @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy."
        },
        "fullyImplemented": true,
        "id": 157,
        "linearizedBaseContracts": [
          157,
          506,
          558
        ],
        "name": "ERC1967Proxy",
        "nameLocation": "561:12:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 143,
              "nodeType": "Block",
              "src": "1001:161:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 122,
                          "name": "_IMPLEMENTATION_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 170,
                          "src": "1018:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "656970313936372e70726f78792e696d706c656d656e746174696f6e",
                                        "id": 128,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1068:30:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
                                          "typeString": "literal_string \"eip1967.proxy.implementation\""
                                        },
                                        "value": "eip1967.proxy.implementation"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
                                          "typeString": "literal_string \"eip1967.proxy.implementation\""
                                        }
                                      ],
                                      "id": 127,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967288,
                                      "src": "1058:9:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 129,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1058:41:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 126,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1050:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 125,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1050:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 130,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1050:50:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 131,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1103:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1050:54:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1042:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 123,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1042:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1042:63:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1018:87:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 121,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "1011:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1011:95:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1011:95:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 138,
                        "name": "_logic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "1134:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 139,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "1142:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1149:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 137,
                      "name": "_upgradeToAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 257,
                      "src": "1116:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1116:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "1116:39:1"
                }
              ]
            },
            "documentation": {
              "id": 114,
              "nodeType": "StructuredDocumentation",
              "src": "605:335:1",
              "text": " @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n function call, and allows initializating the storage of the proxy like a Solidity constructor."
            },
            "id": 144,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "_logic",
                  "nameLocation": "965:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "957:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "957:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "986:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "973:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "973:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "956:36:1"
            },
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1001:0:1"
            },
            "scope": 157,
            "src": "945:217:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              523
            ],
            "body": {
              "id": 155,
              "nodeType": "Block",
              "src": "1321:59:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 151,
                        "name": "ERC1967Upgrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 506,
                        "src": "1338:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC1967Upgrade_$506_$",
                          "typeString": "type(contract ERC1967Upgrade)"
                        }
                      },
                      "id": 152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_getImplementation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 188,
                      "src": "1338:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1338:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 150,
                  "id": 154,
                  "nodeType": "Return",
                  "src": "1331:42:1"
                }
              ]
            },
            "documentation": {
              "id": 145,
              "nodeType": "StructuredDocumentation",
              "src": "1168:67:1",
              "text": " @dev Returns the current implementation address."
            },
            "id": 156,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_implementation",
            "nameLocation": "1249:15:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 147,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1289:8:1"
            },
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1264:2:1"
            },
            "returnParameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "mutability": "mutable",
                  "name": "impl",
                  "nameLocation": "1315:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "1307:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1307:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1306:14:1"
            },
            "scope": 157,
            "src": "1240:140:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 158,
        "src": "552:830:1",
        "usedErrors": []
      }
    ],
    "src": "99:1284:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2022-01-26T09:33:50.330Z",
  "devdoc": {
    "details": "This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity constructor."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}